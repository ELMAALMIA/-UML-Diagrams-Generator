jan. 22, 2024 5:41:44 P.M. org.mql.java.parsers.ParseXMLFile parseFileLogger
INFO: Nom du projet pars√© : El Maalmi Ayoub-UML Diagrams Generator
jan. 22, 2024 5:41:44 P.M. org.mql.java.parsers.ParseXMLFile parseFileLogger
INFO: Package : org
	Class :  AnnotationModel
			--------------------------------------------------
			- name : String
			--------------------------------------------------
			+ AnnotationModel(arg0 : Class<?>)
			+ AnnotationModel()
			+ getName()  : String
			+ toString()  : String
			+ setName(arg0 : String)  : void
			-------------------------------------------------- 
	Class :  Canstant
			--------------------------------------------------
			- name : String
			--------------------------------------------------
			+ Canstant()
			# visibility(arg0 : int)  : AccessModifier
			-------------------------------------------------- 
	Class :  ClassModel
			--------------------------------------------------
			- name : String
			- filedes : List<List>
			- methods : List<List>
			- Constructors : List<List>
			- interfacesImp : List<List>
			- inheritanceChain : List<List>
			- parent : String
			- relations : List<List>
			--------------------------------------------------
			+ ClassModel(arg0 : Class<?>)
			+ ClassModel()
			+ getRelations()  : List
			+ setRelations(arg0 : List<RelationModel>)  : void
			+ getInterfacesImp()  : List
			+ getFiledes()  : List
			+ addFiled(arg0 : FieldModel)  : void
			+ setFiledes(arg0 : List<FieldModel>)  : void
			+ setMethods(arg0 : List<MethodModel>)  : void
			+ getXml()  : void
			+ getInheritanceChain()  : List
			+ setInheritanceChain(arg0 : List<String>)  : void
			+ setConstructors(arg0 : List<ConstructorModel>)  : void
			+ addInterfacesImp(arg0 : String)  : void
			+ addConstructor(arg0 : ConstructorModel)  : void
			+ setInterfacesImp(arg0 : List<String>)  : void
			+ getName()  : String
			+ toString()  : String
			- addAll(arg0 : List<RelationModel>)  : void
			+ getMethods()  : List
			+ getConstructors()  : List
			+ getParent()  : String
			+ setName(arg0 : String)  : void
			+ addMethod(arg0 : MethodModel)  : void
			+ setParent(arg0 : String)  : void
			-------------------------------------------------- 
	Class :  ConstructorModel
			--------------------------------------------------
			- name : String
			- modifier : int
			- parameterList : List<List>
			- visibility : AccessModifier
			--------------------------------------------------
			+ ConstructorModel(arg0 : Constructor<?>, arg1 : String)
			+ ConstructorModel()
			+ ConstructorModel(arg0 : Constructor<?>)
			+ getParameterList()  : List
			+ setParameteeList(arg0 : List<ParameterModel>)  : void
			+ setModifier(arg0 : int)  : void
			+ getModifier()  : int
			+ getName()  : String
			+ toString()  : String
			- addAll(arg0 : Parameter[])  : void
			+ setName(arg0 : String)  : void
			-------------------------------------------------- 
	Class :  Enumeration
			--------------------------------------------------
			- name : String
			- valuesEnum : List<List>
			--------------------------------------------------
			+ Enumeration(arg0 : Class<?>)
			+ Enumeration()
			+ getValuesEnum()  : List
			+ getName()  : String
			+ toString()  : String
			+ setName(arg0 : String)  : void
			-------------------------------------------------- 
	Class :  FieldModel
			--------------------------------------------------
			- name : String
			- niveauVisiblity : AccessModifier
			- type : String
			- isStatic : boolean
			- isFinal : boolean
			- multiplicity : Multiplicity
			- genericType : String
			--------------------------------------------------
			+ FieldModel(arg0 : Field)
			+ FieldModel()
			+ getNiveauVisiblity()  : AccessModifier
			+ isIterable()  : boolean
			+ setStatic(arg0 : boolean)  : void
			+ setFinal(arg0 : boolean)  : void
			+ isMultiple()  : boolean
			+ setType(arg0 : String)  : void
			+ getMultiplicity()  : Multiplicity
			+ setMultiplicity(arg0 : Multiplicity)  : void
			+ setNiveauVisiblity(arg0 : AccessModifier)  : void
			+ setGenericType(arg0 : String)  : void
			+ setIterable(arg0 : boolean)  : void
			+ getName()  : String
			+ toString()  : String
			+ isFinal()  : boolean
			+ isStatic()  : boolean
			+ setName(arg0 : String)  : void
			- getGenericType()  : String
			+ getType()  : String
			-------------------------------------------------- 
	Class :  InterfaceModel
			--------------------------------------------------
			- interfaceName : String
			- fields : List<List>
			- methods : List<List>
			- relations : List<List>
			--------------------------------------------------
			+ InterfaceModel(arg0 : Class<?>)
			+ InterfaceModel()
			+ getInterfaceName()  : String
			+ getRelations()  : List
			+ setRelations(arg0 : List<RelationModel>)  : void
			+ setMethods(arg0 : List<MethodModel>)  : void
			+ setInterfaceName(arg0 : String)  : void
			+ toString()  : String
			+ getFields()  : List
			+ getMethods()  : List
			+ addMethod(arg0 : MethodModel)  : void
			+ setFields(arg0 : List<FieldModel>)  : void
			-------------------------------------------------- 
	Class :  MethodModel
			--------------------------------------------------
			+ name : String
			- parameters : List<List>
			- modifier : int
			- visibility : AccessModifier
			- isStatic : boolean
			- isFinal : boolean
			- typeReturn : String
			--------------------------------------------------
			+ MethodModel()
			+ MethodModel(arg0 : Method)
			+ getTypeReturn()  : String
			+ getVisibility()  : AccessModifier
			+ setStatic(arg0 : boolean)  : void
			+ setFinal(arg0 : boolean)  : void
			+ setVisibility(arg0 : AccessModifier)  : void
			+ setModifier(arg0 : int)  : void
			+ getModifier()  : int
			+ setTypeReturn(arg0 : String)  : void
			+ getName()  : String
			+ toString()  : String
			+ isFinal()  : boolean
			- addAll(arg0 : Parameter[])  : void
			+ isStatic()  : boolean
			+ setName(arg0 : String)  : void
			+ getParameters()  : List
			+ setParameters(arg0 : List<ParameterModel>)  : void
			-------------------------------------------------- 
	Class :  ModelEntity
			--------------------------------------------------
			- name : String
			- properties : List<List>
			- parent : String
			--------------------------------------------------
			+ ModelEntity(arg0 : String)
			+ addProperties(arg0 : PropertyModel)  : void
			+ getName()  : String
			+ toString()  : String
			+ getParent()  : String
			+ getProperties()  : List
			+ setProperties(arg0 : List<PropertyModel>)  : void
			+ setName(arg0 : String)  : void
			+ setParent(arg0 : String)  : void
			-------------------------------------------------- 
	Class :  Multiplicity
			--------------------------------------------------
			- lowerBound : String
			- upperBound : String
			--------------------------------------------------
			+ Multiplicity()
			+ Multiplicity(arg0 : String, arg1 : String)
			+ isMultiple()  : boolean
			+ setLowerBound(arg0 : String)  : void
			+ getLowerBound()  : String
			+ setUpperBound(arg0 : String)  : void
			+ getUpperBound()  : String
			- isValidBound(arg0 : String)  : boolean
			- isNumericMultiple(arg0 : String)  : boolean
			+ toString()  : String
			-------------------------------------------------- 
	Class :  PackageModel
			--------------------------------------------------
			- name : String
			+ packages : List<List>
			+ classes : List<List>
			- interfaces : List<List>
			- enumerations : List<List>
			- annotations : List<List>
			+ relations : List<List>
			--------------------------------------------------
			+ PackageModel(arg0 : String)
			+ PackageModel()
			+ getRelations()  : List
			+ setRelations(arg0 : List<RelationModel>)  : void
			+ getEnumerations()  : List
			+ setClasses(arg0 : List<ClassModel>)  : void
			+ setAnnotations(arg0 : List<AnnotationModel>)  : void
			+ setEnumerations(arg0 : List<Enumeration>)  : void
			+ addRelation(arg0 : RelationModel)  : void
			+ showRelarion()  : void
			+ setInterfaces(arg0 : List<InterfaceModel>)  : void
			+ setPackages(arg0 : List<PackageModel>)  : void
			+ getName()  : String
			+ toString()  : String
			+ getInterfaces()  : List
			+ getClasses()  : List
			+ getAnnotations()  : List
			+ getPackages()  : List
			+ setName(arg0 : String)  : void
			-------------------------------------------------- 
	Class :  ParameterModel
			--------------------------------------------------
			- name : String
			- type : String
			--------------------------------------------------
			+ ParameterModel()
			+ ParameterModel(arg0 : String)
			+ ParameterModel(arg0 : Parameter)
			+ setType(arg0 : String)  : void
			+ getName()  : String
			+ toString()  : String
			+ setName(arg0 : String)  : void
			+ getType()  : String
			-------------------------------------------------- 
	Class :  ProjectModel
			--------------------------------------------------
			- name : String
			+ packagesList : List<List>
			- relationsList : List<List>
			- path : String
			- projectModel : ProjectModel
			--------------------------------------------------
			+ ProjectModel()
			+ ProjectModel(arg0 : List<PackageModel>, arg1 : List<RelationModel>, arg2 : String, arg3 : String)
			+ setPackagesList(arg0 : List<PackageModel>)  : void
			+ getRelations()  : List
			+ setProjectModel(arg0 : ProjectModel)  : void
			+ setRelations(arg0 : List<RelationModel>)  : void
			+ getProjectModel()  : ProjectModel
			+ getPackagesList()  : List
			+ setPath(arg0 : String)  : void
			+ getName()  : String
			+ toString()  : String
			+ setName(arg0 : String)  : void
			+ getPath()  : String
			-------------------------------------------------- 
	Class :  PropertyModel
			--------------------------------------------------
			- name : String
			- niveauVisiblity : AccessModifier
			- type : String
			- isStatic : boolean
			- isFinal : boolean
			--------------------------------------------------
			+ PropertyModel(arg0 : String)
			+ getNiveauVisiblity()  : AccessModifier
			+ setStatic(arg0 : boolean)  : void
			+ setFinal(arg0 : boolean)  : void
			+ setType(arg0 : String)  : void
			+ setNiveauVisiblity(arg0 : AccessModifier)  : void
			+ getName()  : String
			+ toString()  : String
			+ isFinal()  : boolean
			+ isStatic()  : boolean
			+ setName(arg0 : String)  : void
			+ getType()  : String
			-------------------------------------------------- 
	Class :  RelationModel
			--------------------------------------------------
			- sourceModel : Class
			- targetModel : Class
			- relationType : RelationType
			--------------------------------------------------
			+ RelationModel(arg0 : Class<?>, arg1 : Class<?>, arg2 : RelationType)
			+ RelationModel()
			+ getTargetModel()  : Class
			+ getRelationType()  : RelationType
			+ getSourceModel()  : Class
			+ setTargetModel(arg0 : Class<?>)  : void
			+ setSourceModel(arg0 : Class<?>)  : void
			+ setRelationType(arg0 : RelationType)  : void
			+ toString()  : String
			-------------------------------------------------- 
	Class :  ParseProjectTest
			--------------------------------------------------
			--------------------------------------------------
			+ ParseProjectTest()
			~ parseLogger()  : void
			~ parseConsole()  : void
			+ main(arg0 : String[])  : void
			+ parse(arg0 : List<PackageModel>)  : void
			- parse(arg0 : List<PackageModel>, arg1 : Logger)  : void
			-------------------------------------------------- 
	Class :  ParseXMLFile
			--------------------------------------------------
			--------------------------------------------------
			+ ParseXMLFile()
			+ main(arg0 : String[])  : void
			-------------------------------------------------- 
	Class :  TestXMIGenerator
			--------------------------------------------------
			--------------------------------------------------
			+ TestXMIGenerator()
			+ main(arg0 : String[])  : void
			-------------------------------------------------- 
	Class :  TestXMLGenerator
			--------------------------------------------------
			--------------------------------------------------
			+ TestXMLGenerator()
			+ main(arg0 : String[])  : void
			-------------------------------------------------- 
	Class :  AnnotationParser
			--------------------------------------------------
			- name : String
			+ annotation : AnnotationModel
			--------------------------------------------------
			+ AnnotationParser(arg0 : Class<?>)
			+ AnnotationParser(arg0 : String, arg1 : String)
			+ setAnnotation(arg0 : AnnotationModel)  : void
			+ toString()  : String
			+ getAnnotation()  : AnnotationModel
			-------------------------------------------------- 
	Class :  ClassParser
			--------------------------------------------------
			- classModel : ClassModel
			- className : String
			--------------------------------------------------
			+ ClassParser(arg0 : Class<?>)
			+ setClassModel(arg0 : ClassModel)  : void
			+ setClassName(arg0 : String)  : void
			+ getClassModel()  : ClassModel
			+ toString()  : String
			+ getClassName()  : String
			-------------------------------------------------- 
	Class :  EnumerationParser
			--------------------------------------------------
			- name : String
			+ enumeration : Enumeration
			--------------------------------------------------
			+ EnumerationParser(arg0 : String, arg1 : String)
			+ EnumerationParser(arg0 : Class<?>)
			+ setEnumeration(arg0 : Enumeration)  : void
			+ getName()  : String
			+ toString()  : String
			+ setName(arg0 : String)  : void
			+ getEnumeration()  : Enumeration
			-------------------------------------------------- 
	Class :  InterfaceParser
			--------------------------------------------------
			- interfaceModel : InterfaceModel
			--------------------------------------------------
			+ InterfaceParser(arg0 : Class<?>)
			+ InterfaceParser(arg0 : String, arg1 : String)
			+ getInterfaceModel()  : InterfaceModel
			+ getName()  : String
			+ toString()  : String
			+ getFields()  : List
			+ getMethods()  : List
			-------------------------------------------------- 
	Class :  PackageParser
			--------------------------------------------------
			- packageName : String
			- packages : List<List>
			- classes : List<List>
			- interfaces : List<List>
			- enumerations : List<List>
			- annotations : List<List>
			- packageModel : PackageModel
			- relations : List<List>
			- relationlistsProject : List<List>
			- path : String
			--------------------------------------------------
			+ PackageParser(arg0 : String, arg1 : String)
			+ getPackageModel()  : PackageModel
			+ getRelations()  : List
			+ setPackageModel(arg0 : PackageModel)  : void
			+ getPackageName()  : String
			+ parse()  : void
			- getAll()  : void
			-------------------------------------------------- 
	Class :  ProjectParser
			--------------------------------------------------
			- projectPath : String
			- project : ProjectModel
			- name : String
			~ list : List<List>
			--------------------------------------------------
			+ ProjectParser(arg0 : String)
			- getNameProject(arg0 : String)  : String
			+ getProjectPath()  : String
			+ getProject()  : ProjectModel
			+ parse()  : void
			-------------------------------------------------- 
	Class :  RelationParser
			--------------------------------------------------
			- c : Class
			- relations : List<List>
			--------------------------------------------------
			+ RelationParser(arg0 : Class<?>)
			+ getRelations()  : List
			- determineFieldRelationType(arg0 : Field)  : RelationType
			- analyseClass(arg0 : Class<?>)  : List
			+ toString()  : String
			-------------------------------------------------- 
	Class :  XMIGenerator
			--------------------------------------------------
			--------------------------------------------------
			+ XMIGenerator()
			- saveDocument(arg0 : Document, arg1 : String)  : void
			- createConstructorOperationXMI(arg0 : Document, arg1 : ConstructorModel)  : Element
			+ generateXMI(arg0 : ProjectModel, arg1 : String)  : void
			- createPackageXMI(arg0 : List<PackageModel>, arg1 : Document, arg2 : Element)  : void
			- createInterfaceXMI(arg0 : Document, arg1 : InterfaceModel)  : Element
			- createXmiRelation(arg0 : Document, arg1 : RelationModel)  : Element
			- createAttributeXMI(arg0 : Document, arg1 : FieldModel)  : Element
			- createOperationXMI(arg0 : Document, arg1 : MethodModel)  : Element
			- createClassXMI(arg0 : Document, arg1 : ClassModel)  : Element
			- createParameterXMI(arg0 : Document, arg1 : String, arg2 : String)  : Element
			- createAnnotationXMI(arg0 : Document, arg1 : AnnotationModel)  : Node
			- createEnumerationItemXMI(arg0 : Document, arg1 : String)  : Element
			- createEnumerationXMI(arg0 : Document, arg1 : Enumeration)  : Element
			-------------------------------------------------- 
	Class :  XMLGenerator
			--------------------------------------------------
			--------------------------------------------------
			+ XMLGenerator()
			+ generateXML(arg0 : ProjectModel, arg1 : String)  : void
			- createPackageList(arg0 : List<PackageModel>, arg1 : Document, arg2 : Element)  : void
			- createAnnotations(arg0 : Document, arg1 : AnnotationModel)  : Element
			- createInterface(arg0 : Document, arg1 : InterfaceModel)  : Element
			- createClass(arg0 : Document, arg1 : ClassModel)  : Element
			- saveDocument(arg0 : Document, arg1 : String)  : void
			- createFieldElement(arg0 : Document, arg1 : FieldModel)  : Element
			- createRelation(arg0 : Document, arg1 : RelationModel)  : Element
			- createEnumuration(arg0 : Document, arg1 : Enumeration)  : Element
			- createConstructorElement(arg0 : Document, arg1 : ConstructorModel)  : Element
			- createMethodElement(arg0 : Document, arg1 : MethodModel)  : Element
			-------------------------------------------------- 
	Class :  XMLParser
			--------------------------------------------------
			--------------------------------------------------
			+ XMLParser()
			- parsePackage(arg0 : Element)  : PackageModel
			- parseEnumeration(arg0 : Element)  : Enumeration
			- parseConstructor(arg0 : Element)  : ConstructorModel
			- parseRelation(arg0 : Element)  : RelationModel
			- parseInterface(arg0 : Element)  : InterfaceModel
			- parseClass(arg0 : Element)  : ClassModel
			+ parse(arg0 : String)  : ProjectModel
			- parseMethod(arg0 : Element)  : MethodModel
			- parseField(arg0 : Element)  : FieldModel
			- parseAnnotation(arg0 : Element)  : AnnotationModel
			-------------------------------------------------- 
	Class :  XMLNode
			--------------------------------------------------
			- node : Node
			- children : XMLNode[]<XMLNode[]>
			--------------------------------------------------
			+ XMLNode(arg0 : String)
			+ XMLNode(arg0 : Node)
			- extractChildren()  : void
			+ getIntAttribute(arg0 : String)  : int
			+ getName()  : String
			+ getValue()  : String
			+ isNamed(arg0 : String)  : boolean
			+ getNode()  : Node
			+ getAttribute(arg0 : String)  : String
			+ setNode(arg0 : Node)  : void
			+ getChild(arg0 : String)  : XMLNode
			+ getChildren()  : XMLNode[]
			-------------------------------------------------- 
	Class :  FilesUtilsTest
			--------------------------------------------------
			- filesUtils : FilesUtils
			- testFolder : File
			--------------------------------------------------
			+ FilesUtilsTest()
			~ testGetAllPackages()  : void
			~ testIsAValidClassFile()  : void
			~ testIsAValidPackage()  : void
			~ testIsAValidProject()  : void
			~ init()  : void
			-------------------------------------------------- 
	Class :  ParserTest
			--------------------------------------------------
			--------------------------------------------------
			+ ParserTest()
			+ testProjectParser()  : void
			-------------------------------------------------- 
	Class :  ClassesLoaderUtils
			--------------------------------------------------
			--------------------------------------------------
			+ ClassesLoaderUtils()
			+ forName(arg0 : String, arg1 : String)  : Class
			-------------------------------------------------- 
	Class :  FilesUtils
			--------------------------------------------------
			+ logger : Logger
			- projectValidator : Validator
			- packageValidator : Validator
			- classValidator : Validator
			--------------------------------------------------
			+ FilesUtils(arg0 : Validator<File>, arg1 : Validator<File>, arg2 : Validator<File>)
			+ FilesUtils()
			+ doesFileExist(arg0 : Object, arg1 : Object)  : boolean
			+ doesFileExist(arg0 : File, arg1 : Logger)  : boolean
			+ isAValidPackage(arg0 : File)  : boolean
			+ getAllPackages(arg0 : File, arg1 : List<File>)  : void
			+ isAValidProject(arg0 : File)  : boolean
			+ isAValidClassFile(arg0 : File)  : boolean
			-------------------------------------------------- 
	Class :  GenericTypeUtils
			--------------------------------------------------
			--------------------------------------------------
			+ GenericTypeUtils()
			+ getGenericType(arg0 : Type)  : String
			-------------------------------------------------- 
	Class :  RelationUtils
			--------------------------------------------------
			--------------------------------------------------
			+ RelationUtils()
			+ getRelations(arg0 : ProjectModel)  : List
			-------------------------------------------------- 
	Class :  StringUtils
			--------------------------------------------------
			--------------------------------------------------
			+ StringUtils()
			+ extractProjectName(arg0 : String)  : String
			+ getSimpleName(arg0 : String)  : String
			-------------------------------------------------- 
	Class :  VisibilityUtils
			--------------------------------------------------
			--------------------------------------------------
			+ VisibilityUtils()
			+ determineVisibility(arg0 : int)  : AccessModifier
			-------------------------------------------------- 
	Class :  ClassValidator
			--------------------------------------------------
			--------------------------------------------------
			+ ClassValidator()
			+ doesFileExist(arg0 : Object, arg1 : Object)  : boolean
			+ doesFileExist(arg0 : File, arg1 : Logger)  : boolean
			+ isValid(arg0 : File, arg1 : Logger)  : boolean
			+ isValid(arg0 : Object, arg1 : Object)  : boolean
			-------------------------------------------------- 
	Class :  PackageValidator
			--------------------------------------------------
			--------------------------------------------------
			+ PackageValidator()
			+ doesFileExist(arg0 : Object, arg1 : Object)  : boolean
			+ doesFileExist(arg0 : File, arg1 : Logger)  : boolean
			+ isValid(arg0 : File, arg1 : Logger)  : boolean
			+ isValid(arg0 : Object, arg1 : Object)  : boolean
			-------------------------------------------------- 
	Class :  ProjectValidator
			--------------------------------------------------
			--------------------------------------------------
			+ ProjectValidator()
			+ doesFileExist(arg0 : Object, arg1 : Object)  : boolean
			+ doesFileExist(arg0 : File, arg1 : Logger)  : boolean
			+ isValid(arg0 : File, arg1 : Logger)  : boolean
			+ isValid(arg0 : Object, arg1 : Object)  : boolean
			-------------------------------------------------- 
	Annotation AnotationTest
	 Interface : I
	 Interface : ModelInterface
			+ getXml()  : void
	 Interface : Parser
			+ Parse(arg0 : Object)  : Object
	 Interface : FileValidator
			+ doesFileExist(arg0 : Object, arg1 : Object)  : boolean
	 Interface : Validator
			+ isValid(arg0 : Object, arg1 : Object)  : boolean
	enumeration : AccessModifier

	enumeration : RelationType


jan. 22, 2024 5:41:44 P.M. org.mql.java.parsers.ParseXMLFile parseFileLogger
INFO: Package : org.mql
	Class :  AnnotationModel
			--------------------------------------------------
			- name : String
			--------------------------------------------------
			+ AnnotationModel(arg0 : Class<?>)
			+ AnnotationModel()
			+ getName()  : String
			+ toString()  : String
			+ setName(arg0 : String)  : void
			-------------------------------------------------- 
	Class :  Canstant
			--------------------------------------------------
			- name : String
			--------------------------------------------------
			+ Canstant()
			# visibility(arg0 : int)  : AccessModifier
			-------------------------------------------------- 
	Class :  ClassModel
			--------------------------------------------------
			- name : String
			- filedes : List<List>
			- methods : List<List>
			- Constructors : List<List>
			- interfacesImp : List<List>
			- inheritanceChain : List<List>
			- parent : String
			- relations : List<List>
			--------------------------------------------------
			+ ClassModel(arg0 : Class<?>)
			+ ClassModel()
			+ getRelations()  : List
			+ setRelations(arg0 : List<RelationModel>)  : void
			+ getInterfacesImp()  : List
			+ getFiledes()  : List
			+ addFiled(arg0 : FieldModel)  : void
			+ setFiledes(arg0 : List<FieldModel>)  : void
			+ setMethods(arg0 : List<MethodModel>)  : void
			+ getXml()  : void
			+ getInheritanceChain()  : List
			+ setInheritanceChain(arg0 : List<String>)  : void
			+ setConstructors(arg0 : List<ConstructorModel>)  : void
			+ addInterfacesImp(arg0 : String)  : void
			+ addConstructor(arg0 : ConstructorModel)  : void
			+ setInterfacesImp(arg0 : List<String>)  : void
			+ getName()  : String
			+ toString()  : String
			- addAll(arg0 : List<RelationModel>)  : void
			+ getMethods()  : List
			+ getConstructors()  : List
			+ getParent()  : String
			+ setName(arg0 : String)  : void
			+ addMethod(arg0 : MethodModel)  : void
			+ setParent(arg0 : String)  : void
			-------------------------------------------------- 
	Class :  ConstructorModel
			--------------------------------------------------
			- name : String
			- modifier : int
			- parameterList : List<List>
			- visibility : AccessModifier
			--------------------------------------------------
			+ ConstructorModel(arg0 : Constructor<?>, arg1 : String)
			+ ConstructorModel()
			+ ConstructorModel(arg0 : Constructor<?>)
			+ getParameterList()  : List
			+ setParameteeList(arg0 : List<ParameterModel>)  : void
			+ setModifier(arg0 : int)  : void
			+ getModifier()  : int
			+ getName()  : String
			+ toString()  : String
			- addAll(arg0 : Parameter[])  : void
			+ setName(arg0 : String)  : void
			-------------------------------------------------- 
	Class :  Enumeration
			--------------------------------------------------
			- name : String
			- valuesEnum : List<List>
			--------------------------------------------------
			+ Enumeration(arg0 : Class<?>)
			+ Enumeration()
			+ getValuesEnum()  : List
			+ getName()  : String
			+ toString()  : String
			+ setName(arg0 : String)  : void
			-------------------------------------------------- 
	Class :  FieldModel
			--------------------------------------------------
			- name : String
			- niveauVisiblity : AccessModifier
			- type : String
			- isStatic : boolean
			- isFinal : boolean
			- multiplicity : Multiplicity
			- genericType : String
			--------------------------------------------------
			+ FieldModel(arg0 : Field)
			+ FieldModel()
			+ getNiveauVisiblity()  : AccessModifier
			+ isIterable()  : boolean
			+ setStatic(arg0 : boolean)  : void
			+ setFinal(arg0 : boolean)  : void
			+ isMultiple()  : boolean
			+ setType(arg0 : String)  : void
			+ getMultiplicity()  : Multiplicity
			+ setMultiplicity(arg0 : Multiplicity)  : void
			+ setNiveauVisiblity(arg0 : AccessModifier)  : void
			+ setGenericType(arg0 : String)  : void
			+ setIterable(arg0 : boolean)  : void
			+ getName()  : String
			+ toString()  : String
			+ isFinal()  : boolean
			+ isStatic()  : boolean
			+ setName(arg0 : String)  : void
			- getGenericType()  : String
			+ getType()  : String
			-------------------------------------------------- 
	Class :  InterfaceModel
			--------------------------------------------------
			- interfaceName : String
			- fields : List<List>
			- methods : List<List>
			- relations : List<List>
			--------------------------------------------------
			+ InterfaceModel(arg0 : Class<?>)
			+ InterfaceModel()
			+ getInterfaceName()  : String
			+ getRelations()  : List
			+ setRelations(arg0 : List<RelationModel>)  : void
			+ setMethods(arg0 : List<MethodModel>)  : void
			+ setInterfaceName(arg0 : String)  : void
			+ toString()  : String
			+ getFields()  : List
			+ getMethods()  : List
			+ addMethod(arg0 : MethodModel)  : void
			+ setFields(arg0 : List<FieldModel>)  : void
			-------------------------------------------------- 
	Class :  MethodModel
			--------------------------------------------------
			+ name : String
			- parameters : List<List>
			- modifier : int
			- visibility : AccessModifier
			- isStatic : boolean
			- isFinal : boolean
			- typeReturn : String
			--------------------------------------------------
			+ MethodModel()
			+ MethodModel(arg0 : Method)
			+ getTypeReturn()  : String
			+ getVisibility()  : AccessModifier
			+ setStatic(arg0 : boolean)  : void
			+ setFinal(arg0 : boolean)  : void
			+ setVisibility(arg0 : AccessModifier)  : void
			+ setModifier(arg0 : int)  : void
			+ getModifier()  : int
			+ setTypeReturn(arg0 : String)  : void
			+ getName()  : String
			+ toString()  : String
			+ isFinal()  : boolean
			- addAll(arg0 : Parameter[])  : void
			+ isStatic()  : boolean
			+ setName(arg0 : String)  : void
			+ getParameters()  : List
			+ setParameters(arg0 : List<ParameterModel>)  : void
			-------------------------------------------------- 
	Class :  ModelEntity
			--------------------------------------------------
			- name : String
			- properties : List<List>
			- parent : String
			--------------------------------------------------
			+ ModelEntity(arg0 : String)
			+ addProperties(arg0 : PropertyModel)  : void
			+ getName()  : String
			+ toString()  : String
			+ getParent()  : String
			+ getProperties()  : List
			+ setProperties(arg0 : List<PropertyModel>)  : void
			+ setName(arg0 : String)  : void
			+ setParent(arg0 : String)  : void
			-------------------------------------------------- 
	Class :  Multiplicity
			--------------------------------------------------
			- lowerBound : String
			- upperBound : String
			--------------------------------------------------
			+ Multiplicity()
			+ Multiplicity(arg0 : String, arg1 : String)
			+ isMultiple()  : boolean
			+ setLowerBound(arg0 : String)  : void
			+ getLowerBound()  : String
			+ setUpperBound(arg0 : String)  : void
			+ getUpperBound()  : String
			- isValidBound(arg0 : String)  : boolean
			- isNumericMultiple(arg0 : String)  : boolean
			+ toString()  : String
			-------------------------------------------------- 
	Class :  PackageModel
			--------------------------------------------------
			- name : String
			+ packages : List<List>
			+ classes : List<List>
			- interfaces : List<List>
			- enumerations : List<List>
			- annotations : List<List>
			+ relations : List<List>
			--------------------------------------------------
			+ PackageModel(arg0 : String)
			+ PackageModel()
			+ getRelations()  : List
			+ setRelations(arg0 : List<RelationModel>)  : void
			+ getEnumerations()  : List
			+ setClasses(arg0 : List<ClassModel>)  : void
			+ setAnnotations(arg0 : List<AnnotationModel>)  : void
			+ setEnumerations(arg0 : List<Enumeration>)  : void
			+ addRelation(arg0 : RelationModel)  : void
			+ showRelarion()  : void
			+ setInterfaces(arg0 : List<InterfaceModel>)  : void
			+ setPackages(arg0 : List<PackageModel>)  : void
			+ getName()  : String
			+ toString()  : String
			+ getInterfaces()  : List
			+ getClasses()  : List
			+ getAnnotations()  : List
			+ getPackages()  : List
			+ setName(arg0 : String)  : void
			-------------------------------------------------- 
	Class :  ParameterModel
			--------------------------------------------------
			- name : String
			- type : String
			--------------------------------------------------
			+ ParameterModel()
			+ ParameterModel(arg0 : String)
			+ ParameterModel(arg0 : Parameter)
			+ setType(arg0 : String)  : void
			+ getName()  : String
			+ toString()  : String
			+ setName(arg0 : String)  : void
			+ getType()  : String
			-------------------------------------------------- 
	Class :  ProjectModel
			--------------------------------------------------
			- name : String
			+ packagesList : List<List>
			- relationsList : List<List>
			- path : String
			- projectModel : ProjectModel
			--------------------------------------------------
			+ ProjectModel()
			+ ProjectModel(arg0 : List<PackageModel>, arg1 : List<RelationModel>, arg2 : String, arg3 : String)
			+ setPackagesList(arg0 : List<PackageModel>)  : void
			+ getRelations()  : List
			+ setProjectModel(arg0 : ProjectModel)  : void
			+ setRelations(arg0 : List<RelationModel>)  : void
			+ getProjectModel()  : ProjectModel
			+ getPackagesList()  : List
			+ setPath(arg0 : String)  : void
			+ getName()  : String
			+ toString()  : String
			+ setName(arg0 : String)  : void
			+ getPath()  : String
			-------------------------------------------------- 
	Class :  PropertyModel
			--------------------------------------------------
			- name : String
			- niveauVisiblity : AccessModifier
			- type : String
			- isStatic : boolean
			- isFinal : boolean
			--------------------------------------------------
			+ PropertyModel(arg0 : String)
			+ getNiveauVisiblity()  : AccessModifier
			+ setStatic(arg0 : boolean)  : void
			+ setFinal(arg0 : boolean)  : void
			+ setType(arg0 : String)  : void
			+ setNiveauVisiblity(arg0 : AccessModifier)  : void
			+ getName()  : String
			+ toString()  : String
			+ isFinal()  : boolean
			+ isStatic()  : boolean
			+ setName(arg0 : String)  : void
			+ getType()  : String
			-------------------------------------------------- 
	Class :  RelationModel
			--------------------------------------------------
			- sourceModel : Class
			- targetModel : Class
			- relationType : RelationType
			--------------------------------------------------
			+ RelationModel(arg0 : Class<?>, arg1 : Class<?>, arg2 : RelationType)
			+ RelationModel()
			+ getTargetModel()  : Class
			+ getRelationType()  : RelationType
			+ getSourceModel()  : Class
			+ setTargetModel(arg0 : Class<?>)  : void
			+ setSourceModel(arg0 : Class<?>)  : void
			+ setRelationType(arg0 : RelationType)  : void
			+ toString()  : String
			-------------------------------------------------- 
	Class :  ParseProjectTest
			--------------------------------------------------
			--------------------------------------------------
			+ ParseProjectTest()
			~ parseLogger()  : void
			~ parseConsole()  : void
			+ main(arg0 : String[])  : void
			+ parse(arg0 : List<PackageModel>)  : void
			- parse(arg0 : List<PackageModel>, arg1 : Logger)  : void
			-------------------------------------------------- 
	Class :  ParseXMLFile
			--------------------------------------------------
			--------------------------------------------------
			+ ParseXMLFile()
			+ main(arg0 : String[])  : void
			-------------------------------------------------- 
	Class :  TestXMIGenerator
			--------------------------------------------------
			--------------------------------------------------
			+ TestXMIGenerator()
			+ main(arg0 : String[])  : void
			-------------------------------------------------- 
	Class :  TestXMLGenerator
			--------------------------------------------------
			--------------------------------------------------
			+ TestXMLGenerator()
			+ main(arg0 : String[])  : void
			-------------------------------------------------- 
	Class :  AnnotationParser
			--------------------------------------------------
			- name : String
			+ annotation : AnnotationModel
			--------------------------------------------------
			+ AnnotationParser(arg0 : Class<?>)
			+ AnnotationParser(arg0 : String, arg1 : String)
			+ setAnnotation(arg0 : AnnotationModel)  : void
			+ toString()  : String
			+ getAnnotation()  : AnnotationModel
			-------------------------------------------------- 
	Class :  ClassParser
			--------------------------------------------------
			- classModel : ClassModel
			- className : String
			--------------------------------------------------
			+ ClassParser(arg0 : Class<?>)
			+ setClassModel(arg0 : ClassModel)  : void
			+ setClassName(arg0 : String)  : void
			+ getClassModel()  : ClassModel
			+ toString()  : String
			+ getClassName()  : String
			-------------------------------------------------- 
	Class :  EnumerationParser
			--------------------------------------------------
			- name : String
			+ enumeration : Enumeration
			--------------------------------------------------
			+ EnumerationParser(arg0 : String, arg1 : String)
			+ EnumerationParser(arg0 : Class<?>)
			+ setEnumeration(arg0 : Enumeration)  : void
			+ getName()  : String
			+ toString()  : String
			+ setName(arg0 : String)  : void
			+ getEnumeration()  : Enumeration
			-------------------------------------------------- 
	Class :  InterfaceParser
			--------------------------------------------------
			- interfaceModel : InterfaceModel
			--------------------------------------------------
			+ InterfaceParser(arg0 : Class<?>)
			+ InterfaceParser(arg0 : String, arg1 : String)
			+ getInterfaceModel()  : InterfaceModel
			+ getName()  : String
			+ toString()  : String
			+ getFields()  : List
			+ getMethods()  : List
			-------------------------------------------------- 
	Class :  PackageParser
			--------------------------------------------------
			- packageName : String
			- packages : List<List>
			- classes : List<List>
			- interfaces : List<List>
			- enumerations : List<List>
			- annotations : List<List>
			- packageModel : PackageModel
			- relations : List<List>
			- relationlistsProject : List<List>
			- path : String
			--------------------------------------------------
			+ PackageParser(arg0 : String, arg1 : String)
			+ getPackageModel()  : PackageModel
			+ getRelations()  : List
			+ setPackageModel(arg0 : PackageModel)  : void
			+ getPackageName()  : String
			+ parse()  : void
			- getAll()  : void
			-------------------------------------------------- 
	Class :  ProjectParser
			--------------------------------------------------
			- projectPath : String
			- project : ProjectModel
			- name : String
			~ list : List<List>
			--------------------------------------------------
			+ ProjectParser(arg0 : String)
			- getNameProject(arg0 : String)  : String
			+ getProjectPath()  : String
			+ getProject()  : ProjectModel
			+ parse()  : void
			-------------------------------------------------- 
	Class :  RelationParser
			--------------------------------------------------
			- c : Class
			- relations : List<List>
			--------------------------------------------------
			+ RelationParser(arg0 : Class<?>)
			+ getRelations()  : List
			- determineFieldRelationType(arg0 : Field)  : RelationType
			- analyseClass(arg0 : Class<?>)  : List
			+ toString()  : String
			-------------------------------------------------- 
	Class :  XMIGenerator
			--------------------------------------------------
			--------------------------------------------------
			+ XMIGenerator()
			- saveDocument(arg0 : Document, arg1 : String)  : void
			- createConstructorOperationXMI(arg0 : Document, arg1 : ConstructorModel)  : Element
			+ generateXMI(arg0 : ProjectModel, arg1 : String)  : void
			- createPackageXMI(arg0 : List<PackageModel>, arg1 : Document, arg2 : Element)  : void
			- createInterfaceXMI(arg0 : Document, arg1 : InterfaceModel)  : Element
			- createXmiRelation(arg0 : Document, arg1 : RelationModel)  : Element
			- createAttributeXMI(arg0 : Document, arg1 : FieldModel)  : Element
			- createOperationXMI(arg0 : Document, arg1 : MethodModel)  : Element
			- createClassXMI(arg0 : Document, arg1 : ClassModel)  : Element
			- createParameterXMI(arg0 : Document, arg1 : String, arg2 : String)  : Element
			- createAnnotationXMI(arg0 : Document, arg1 : AnnotationModel)  : Node
			- createEnumerationItemXMI(arg0 : Document, arg1 : String)  : Element
			- createEnumerationXMI(arg0 : Document, arg1 : Enumeration)  : Element
			-------------------------------------------------- 
	Class :  XMLGenerator
			--------------------------------------------------
			--------------------------------------------------
			+ XMLGenerator()
			+ generateXML(arg0 : ProjectModel, arg1 : String)  : void
			- createPackageList(arg0 : List<PackageModel>, arg1 : Document, arg2 : Element)  : void
			- createAnnotations(arg0 : Document, arg1 : AnnotationModel)  : Element
			- createInterface(arg0 : Document, arg1 : InterfaceModel)  : Element
			- createClass(arg0 : Document, arg1 : ClassModel)  : Element
			- saveDocument(arg0 : Document, arg1 : String)  : void
			- createFieldElement(arg0 : Document, arg1 : FieldModel)  : Element
			- createRelation(arg0 : Document, arg1 : RelationModel)  : Element
			- createEnumuration(arg0 : Document, arg1 : Enumeration)  : Element
			- createConstructorElement(arg0 : Document, arg1 : ConstructorModel)  : Element
			- createMethodElement(arg0 : Document, arg1 : MethodModel)  : Element
			-------------------------------------------------- 
	Class :  XMLParser
			--------------------------------------------------
			--------------------------------------------------
			+ XMLParser()
			- parsePackage(arg0 : Element)  : PackageModel
			- parseEnumeration(arg0 : Element)  : Enumeration
			- parseConstructor(arg0 : Element)  : ConstructorModel
			- parseRelation(arg0 : Element)  : RelationModel
			- parseInterface(arg0 : Element)  : InterfaceModel
			- parseClass(arg0 : Element)  : ClassModel
			+ parse(arg0 : String)  : ProjectModel
			- parseMethod(arg0 : Element)  : MethodModel
			- parseField(arg0 : Element)  : FieldModel
			- parseAnnotation(arg0 : Element)  : AnnotationModel
			-------------------------------------------------- 
	Class :  XMLNode
			--------------------------------------------------
			- node : Node
			- children : XMLNode[]<XMLNode[]>
			--------------------------------------------------
			+ XMLNode(arg0 : String)
			+ XMLNode(arg0 : Node)
			- extractChildren()  : void
			+ getIntAttribute(arg0 : String)  : int
			+ getName()  : String
			+ getValue()  : String
			+ isNamed(arg0 : String)  : boolean
			+ getNode()  : Node
			+ getAttribute(arg0 : String)  : String
			+ setNode(arg0 : Node)  : void
			+ getChild(arg0 : String)  : XMLNode
			+ getChildren()  : XMLNode[]
			-------------------------------------------------- 
	Class :  FilesUtilsTest
			--------------------------------------------------
			- filesUtils : FilesUtils
			- testFolder : File
			--------------------------------------------------
			+ FilesUtilsTest()
			~ testGetAllPackages()  : void
			~ testIsAValidClassFile()  : void
			~ testIsAValidPackage()  : void
			~ testIsAValidProject()  : void
			~ init()  : void
			-------------------------------------------------- 
	Class :  ParserTest
			--------------------------------------------------
			--------------------------------------------------
			+ ParserTest()
			+ testProjectParser()  : void
			-------------------------------------------------- 
	Class :  ClassesLoaderUtils
			--------------------------------------------------
			--------------------------------------------------
			+ ClassesLoaderUtils()
			+ forName(arg0 : String, arg1 : String)  : Class
			-------------------------------------------------- 
	Class :  FilesUtils
			--------------------------------------------------
			+ logger : Logger
			- projectValidator : Validator
			- packageValidator : Validator
			- classValidator : Validator
			--------------------------------------------------
			+ FilesUtils(arg0 : Validator<File>, arg1 : Validator<File>, arg2 : Validator<File>)
			+ FilesUtils()
			+ doesFileExist(arg0 : Object, arg1 : Object)  : boolean
			+ doesFileExist(arg0 : File, arg1 : Logger)  : boolean
			+ isAValidPackage(arg0 : File)  : boolean
			+ getAllPackages(arg0 : File, arg1 : List<File>)  : void
			+ isAValidProject(arg0 : File)  : boolean
			+ isAValidClassFile(arg0 : File)  : boolean
			-------------------------------------------------- 
	Class :  GenericTypeUtils
			--------------------------------------------------
			--------------------------------------------------
			+ GenericTypeUtils()
			+ getGenericType(arg0 : Type)  : String
			-------------------------------------------------- 
	Class :  RelationUtils
			--------------------------------------------------
			--------------------------------------------------
			+ RelationUtils()
			+ getRelations(arg0 : ProjectModel)  : List
			-------------------------------------------------- 
	Class :  StringUtils
			--------------------------------------------------
			--------------------------------------------------
			+ StringUtils()
			+ extractProjectName(arg0 : String)  : String
			+ getSimpleName(arg0 : String)  : String
			-------------------------------------------------- 
	Class :  VisibilityUtils
			--------------------------------------------------
			--------------------------------------------------
			+ VisibilityUtils()
			+ determineVisibility(arg0 : int)  : AccessModifier
			-------------------------------------------------- 
	Class :  ClassValidator
			--------------------------------------------------
			--------------------------------------------------
			+ ClassValidator()
			+ doesFileExist(arg0 : Object, arg1 : Object)  : boolean
			+ doesFileExist(arg0 : File, arg1 : Logger)  : boolean
			+ isValid(arg0 : File, arg1 : Logger)  : boolean
			+ isValid(arg0 : Object, arg1 : Object)  : boolean
			-------------------------------------------------- 
	Class :  PackageValidator
			--------------------------------------------------
			--------------------------------------------------
			+ PackageValidator()
			+ doesFileExist(arg0 : Object, arg1 : Object)  : boolean
			+ doesFileExist(arg0 : File, arg1 : Logger)  : boolean
			+ isValid(arg0 : File, arg1 : Logger)  : boolean
			+ isValid(arg0 : Object, arg1 : Object)  : boolean
			-------------------------------------------------- 
	Class :  ProjectValidator
			--------------------------------------------------
			--------------------------------------------------
			+ ProjectValidator()
			+ doesFileExist(arg0 : Object, arg1 : Object)  : boolean
			+ doesFileExist(arg0 : File, arg1 : Logger)  : boolean
			+ isValid(arg0 : File, arg1 : Logger)  : boolean
			+ isValid(arg0 : Object, arg1 : Object)  : boolean
			-------------------------------------------------- 
	Annotation AnotationTest
	 Interface : I
	 Interface : ModelInterface
			+ getXml()  : void
	 Interface : Parser
			+ Parse(arg0 : Object)  : Object
	 Interface : FileValidator
			+ doesFileExist(arg0 : Object, arg1 : Object)  : boolean
	 Interface : Validator
			+ isValid(arg0 : Object, arg1 : Object)  : boolean
	enumeration : AccessModifier

	enumeration : RelationType


jan. 22, 2024 5:41:44 P.M. org.mql.java.parsers.ParseXMLFile parseFileLogger
INFO: Package : org.mql.java
	Class :  AnnotationModel
			--------------------------------------------------
			- name : String
			--------------------------------------------------
			+ AnnotationModel(arg0 : Class<?>)
			+ AnnotationModel()
			+ getName()  : String
			+ toString()  : String
			+ setName(arg0 : String)  : void
			-------------------------------------------------- 
	Class :  Canstant
			--------------------------------------------------
			- name : String
			--------------------------------------------------
			+ Canstant()
			# visibility(arg0 : int)  : AccessModifier
			-------------------------------------------------- 
	Class :  ClassModel
			--------------------------------------------------
			- name : String
			- filedes : List<List>
			- methods : List<List>
			- Constructors : List<List>
			- interfacesImp : List<List>
			- inheritanceChain : List<List>
			- parent : String
			- relations : List<List>
			--------------------------------------------------
			+ ClassModel(arg0 : Class<?>)
			+ ClassModel()
			+ getRelations()  : List
			+ setRelations(arg0 : List<RelationModel>)  : void
			+ getInterfacesImp()  : List
			+ getFiledes()  : List
			+ addFiled(arg0 : FieldModel)  : void
			+ setFiledes(arg0 : List<FieldModel>)  : void
			+ setMethods(arg0 : List<MethodModel>)  : void
			+ getXml()  : void
			+ getInheritanceChain()  : List
			+ setInheritanceChain(arg0 : List<String>)  : void
			+ setConstructors(arg0 : List<ConstructorModel>)  : void
			+ addInterfacesImp(arg0 : String)  : void
			+ addConstructor(arg0 : ConstructorModel)  : void
			+ setInterfacesImp(arg0 : List<String>)  : void
			+ getName()  : String
			+ toString()  : String
			- addAll(arg0 : List<RelationModel>)  : void
			+ getMethods()  : List
			+ getConstructors()  : List
			+ getParent()  : String
			+ setName(arg0 : String)  : void
			+ addMethod(arg0 : MethodModel)  : void
			+ setParent(arg0 : String)  : void
			-------------------------------------------------- 
	Class :  ConstructorModel
			--------------------------------------------------
			- name : String
			- modifier : int
			- parameterList : List<List>
			- visibility : AccessModifier
			--------------------------------------------------
			+ ConstructorModel(arg0 : Constructor<?>, arg1 : String)
			+ ConstructorModel()
			+ ConstructorModel(arg0 : Constructor<?>)
			+ getParameterList()  : List
			+ setParameteeList(arg0 : List<ParameterModel>)  : void
			+ setModifier(arg0 : int)  : void
			+ getModifier()  : int
			+ getName()  : String
			+ toString()  : String
			- addAll(arg0 : Parameter[])  : void
			+ setName(arg0 : String)  : void
			-------------------------------------------------- 
	Class :  Enumeration
			--------------------------------------------------
			- name : String
			- valuesEnum : List<List>
			--------------------------------------------------
			+ Enumeration(arg0 : Class<?>)
			+ Enumeration()
			+ getValuesEnum()  : List
			+ getName()  : String
			+ toString()  : String
			+ setName(arg0 : String)  : void
			-------------------------------------------------- 
	Class :  FieldModel
			--------------------------------------------------
			- name : String
			- niveauVisiblity : AccessModifier
			- type : String
			- isStatic : boolean
			- isFinal : boolean
			- multiplicity : Multiplicity
			- genericType : String
			--------------------------------------------------
			+ FieldModel(arg0 : Field)
			+ FieldModel()
			+ getNiveauVisiblity()  : AccessModifier
			+ isIterable()  : boolean
			+ setStatic(arg0 : boolean)  : void
			+ setFinal(arg0 : boolean)  : void
			+ isMultiple()  : boolean
			+ setType(arg0 : String)  : void
			+ getMultiplicity()  : Multiplicity
			+ setMultiplicity(arg0 : Multiplicity)  : void
			+ setNiveauVisiblity(arg0 : AccessModifier)  : void
			+ setGenericType(arg0 : String)  : void
			+ setIterable(arg0 : boolean)  : void
			+ getName()  : String
			+ toString()  : String
			+ isFinal()  : boolean
			+ isStatic()  : boolean
			+ setName(arg0 : String)  : void
			- getGenericType()  : String
			+ getType()  : String
			-------------------------------------------------- 
	Class :  InterfaceModel
			--------------------------------------------------
			- interfaceName : String
			- fields : List<List>
			- methods : List<List>
			- relations : List<List>
			--------------------------------------------------
			+ InterfaceModel(arg0 : Class<?>)
			+ InterfaceModel()
			+ getInterfaceName()  : String
			+ getRelations()  : List
			+ setRelations(arg0 : List<RelationModel>)  : void
			+ setMethods(arg0 : List<MethodModel>)  : void
			+ setInterfaceName(arg0 : String)  : void
			+ toString()  : String
			+ getFields()  : List
			+ getMethods()  : List
			+ addMethod(arg0 : MethodModel)  : void
			+ setFields(arg0 : List<FieldModel>)  : void
			-------------------------------------------------- 
	Class :  MethodModel
			--------------------------------------------------
			+ name : String
			- parameters : List<List>
			- modifier : int
			- visibility : AccessModifier
			- isStatic : boolean
			- isFinal : boolean
			- typeReturn : String
			--------------------------------------------------
			+ MethodModel()
			+ MethodModel(arg0 : Method)
			+ getTypeReturn()  : String
			+ getVisibility()  : AccessModifier
			+ setStatic(arg0 : boolean)  : void
			+ setFinal(arg0 : boolean)  : void
			+ setVisibility(arg0 : AccessModifier)  : void
			+ setModifier(arg0 : int)  : void
			+ getModifier()  : int
			+ setTypeReturn(arg0 : String)  : void
			+ getName()  : String
			+ toString()  : String
			+ isFinal()  : boolean
			- addAll(arg0 : Parameter[])  : void
			+ isStatic()  : boolean
			+ setName(arg0 : String)  : void
			+ getParameters()  : List
			+ setParameters(arg0 : List<ParameterModel>)  : void
			-------------------------------------------------- 
	Class :  ModelEntity
			--------------------------------------------------
			- name : String
			- properties : List<List>
			- parent : String
			--------------------------------------------------
			+ ModelEntity(arg0 : String)
			+ addProperties(arg0 : PropertyModel)  : void
			+ getName()  : String
			+ toString()  : String
			+ getParent()  : String
			+ getProperties()  : List
			+ setProperties(arg0 : List<PropertyModel>)  : void
			+ setName(arg0 : String)  : void
			+ setParent(arg0 : String)  : void
			-------------------------------------------------- 
	Class :  Multiplicity
			--------------------------------------------------
			- lowerBound : String
			- upperBound : String
			--------------------------------------------------
			+ Multiplicity()
			+ Multiplicity(arg0 : String, arg1 : String)
			+ isMultiple()  : boolean
			+ setLowerBound(arg0 : String)  : void
			+ getLowerBound()  : String
			+ setUpperBound(arg0 : String)  : void
			+ getUpperBound()  : String
			- isValidBound(arg0 : String)  : boolean
			- isNumericMultiple(arg0 : String)  : boolean
			+ toString()  : String
			-------------------------------------------------- 
	Class :  PackageModel
			--------------------------------------------------
			- name : String
			+ packages : List<List>
			+ classes : List<List>
			- interfaces : List<List>
			- enumerations : List<List>
			- annotations : List<List>
			+ relations : List<List>
			--------------------------------------------------
			+ PackageModel(arg0 : String)
			+ PackageModel()
			+ getRelations()  : List
			+ setRelations(arg0 : List<RelationModel>)  : void
			+ getEnumerations()  : List
			+ setClasses(arg0 : List<ClassModel>)  : void
			+ setAnnotations(arg0 : List<AnnotationModel>)  : void
			+ setEnumerations(arg0 : List<Enumeration>)  : void
			+ addRelation(arg0 : RelationModel)  : void
			+ showRelarion()  : void
			+ setInterfaces(arg0 : List<InterfaceModel>)  : void
			+ setPackages(arg0 : List<PackageModel>)  : void
			+ getName()  : String
			+ toString()  : String
			+ getInterfaces()  : List
			+ getClasses()  : List
			+ getAnnotations()  : List
			+ getPackages()  : List
			+ setName(arg0 : String)  : void
			-------------------------------------------------- 
	Class :  ParameterModel
			--------------------------------------------------
			- name : String
			- type : String
			--------------------------------------------------
			+ ParameterModel()
			+ ParameterModel(arg0 : String)
			+ ParameterModel(arg0 : Parameter)
			+ setType(arg0 : String)  : void
			+ getName()  : String
			+ toString()  : String
			+ setName(arg0 : String)  : void
			+ getType()  : String
			-------------------------------------------------- 
	Class :  ProjectModel
			--------------------------------------------------
			- name : String
			+ packagesList : List<List>
			- relationsList : List<List>
			- path : String
			- projectModel : ProjectModel
			--------------------------------------------------
			+ ProjectModel()
			+ ProjectModel(arg0 : List<PackageModel>, arg1 : List<RelationModel>, arg2 : String, arg3 : String)
			+ setPackagesList(arg0 : List<PackageModel>)  : void
			+ getRelations()  : List
			+ setProjectModel(arg0 : ProjectModel)  : void
			+ setRelations(arg0 : List<RelationModel>)  : void
			+ getProjectModel()  : ProjectModel
			+ getPackagesList()  : List
			+ setPath(arg0 : String)  : void
			+ getName()  : String
			+ toString()  : String
			+ setName(arg0 : String)  : void
			+ getPath()  : String
			-------------------------------------------------- 
	Class :  PropertyModel
			--------------------------------------------------
			- name : String
			- niveauVisiblity : AccessModifier
			- type : String
			- isStatic : boolean
			- isFinal : boolean
			--------------------------------------------------
			+ PropertyModel(arg0 : String)
			+ getNiveauVisiblity()  : AccessModifier
			+ setStatic(arg0 : boolean)  : void
			+ setFinal(arg0 : boolean)  : void
			+ setType(arg0 : String)  : void
			+ setNiveauVisiblity(arg0 : AccessModifier)  : void
			+ getName()  : String
			+ toString()  : String
			+ isFinal()  : boolean
			+ isStatic()  : boolean
			+ setName(arg0 : String)  : void
			+ getType()  : String
			-------------------------------------------------- 
	Class :  RelationModel
			--------------------------------------------------
			- sourceModel : Class
			- targetModel : Class
			- relationType : RelationType
			--------------------------------------------------
			+ RelationModel(arg0 : Class<?>, arg1 : Class<?>, arg2 : RelationType)
			+ RelationModel()
			+ getTargetModel()  : Class
			+ getRelationType()  : RelationType
			+ getSourceModel()  : Class
			+ setTargetModel(arg0 : Class<?>)  : void
			+ setSourceModel(arg0 : Class<?>)  : void
			+ setRelationType(arg0 : RelationType)  : void
			+ toString()  : String
			-------------------------------------------------- 
	Class :  ParseProjectTest
			--------------------------------------------------
			--------------------------------------------------
			+ ParseProjectTest()
			~ parseLogger()  : void
			~ parseConsole()  : void
			+ main(arg0 : String[])  : void
			+ parse(arg0 : List<PackageModel>)  : void
			- parse(arg0 : List<PackageModel>, arg1 : Logger)  : void
			-------------------------------------------------- 
	Class :  ParseXMLFile
			--------------------------------------------------
			--------------------------------------------------
			+ ParseXMLFile()
			+ main(arg0 : String[])  : void
			-------------------------------------------------- 
	Class :  TestXMIGenerator
			--------------------------------------------------
			--------------------------------------------------
			+ TestXMIGenerator()
			+ main(arg0 : String[])  : void
			-------------------------------------------------- 
	Class :  TestXMLGenerator
			--------------------------------------------------
			--------------------------------------------------
			+ TestXMLGenerator()
			+ main(arg0 : String[])  : void
			-------------------------------------------------- 
	Class :  AnnotationParser
			--------------------------------------------------
			- name : String
			+ annotation : AnnotationModel
			--------------------------------------------------
			+ AnnotationParser(arg0 : Class<?>)
			+ AnnotationParser(arg0 : String, arg1 : String)
			+ setAnnotation(arg0 : AnnotationModel)  : void
			+ toString()  : String
			+ getAnnotation()  : AnnotationModel
			-------------------------------------------------- 
	Class :  ClassParser
			--------------------------------------------------
			- classModel : ClassModel
			- className : String
			--------------------------------------------------
			+ ClassParser(arg0 : Class<?>)
			+ setClassModel(arg0 : ClassModel)  : void
			+ setClassName(arg0 : String)  : void
			+ getClassModel()  : ClassModel
			+ toString()  : String
			+ getClassName()  : String
			-------------------------------------------------- 
	Class :  EnumerationParser
			--------------------------------------------------
			- name : String
			+ enumeration : Enumeration
			--------------------------------------------------
			+ EnumerationParser(arg0 : String, arg1 : String)
			+ EnumerationParser(arg0 : Class<?>)
			+ setEnumeration(arg0 : Enumeration)  : void
			+ getName()  : String
			+ toString()  : String
			+ setName(arg0 : String)  : void
			+ getEnumeration()  : Enumeration
			-------------------------------------------------- 
	Class :  InterfaceParser
			--------------------------------------------------
			- interfaceModel : InterfaceModel
			--------------------------------------------------
			+ InterfaceParser(arg0 : Class<?>)
			+ InterfaceParser(arg0 : String, arg1 : String)
			+ getInterfaceModel()  : InterfaceModel
			+ getName()  : String
			+ toString()  : String
			+ getFields()  : List
			+ getMethods()  : List
			-------------------------------------------------- 
	Class :  PackageParser
			--------------------------------------------------
			- packageName : String
			- packages : List<List>
			- classes : List<List>
			- interfaces : List<List>
			- enumerations : List<List>
			- annotations : List<List>
			- packageModel : PackageModel
			- relations : List<List>
			- relationlistsProject : List<List>
			- path : String
			--------------------------------------------------
			+ PackageParser(arg0 : String, arg1 : String)
			+ getPackageModel()  : PackageModel
			+ getRelations()  : List
			+ setPackageModel(arg0 : PackageModel)  : void
			+ getPackageName()  : String
			+ parse()  : void
			- getAll()  : void
			-------------------------------------------------- 
	Class :  ProjectParser
			--------------------------------------------------
			- projectPath : String
			- project : ProjectModel
			- name : String
			~ list : List<List>
			--------------------------------------------------
			+ ProjectParser(arg0 : String)
			- getNameProject(arg0 : String)  : String
			+ getProjectPath()  : String
			+ getProject()  : ProjectModel
			+ parse()  : void
			-------------------------------------------------- 
	Class :  RelationParser
			--------------------------------------------------
			- c : Class
			- relations : List<List>
			--------------------------------------------------
			+ RelationParser(arg0 : Class<?>)
			+ getRelations()  : List
			- determineFieldRelationType(arg0 : Field)  : RelationType
			- analyseClass(arg0 : Class<?>)  : List
			+ toString()  : String
			-------------------------------------------------- 
	Class :  XMIGenerator
			--------------------------------------------------
			--------------------------------------------------
			+ XMIGenerator()
			- saveDocument(arg0 : Document, arg1 : String)  : void
			- createConstructorOperationXMI(arg0 : Document, arg1 : ConstructorModel)  : Element
			+ generateXMI(arg0 : ProjectModel, arg1 : String)  : void
			- createPackageXMI(arg0 : List<PackageModel>, arg1 : Document, arg2 : Element)  : void
			- createInterfaceXMI(arg0 : Document, arg1 : InterfaceModel)  : Element
			- createXmiRelation(arg0 : Document, arg1 : RelationModel)  : Element
			- createAttributeXMI(arg0 : Document, arg1 : FieldModel)  : Element
			- createOperationXMI(arg0 : Document, arg1 : MethodModel)  : Element
			- createClassXMI(arg0 : Document, arg1 : ClassModel)  : Element
			- createParameterXMI(arg0 : Document, arg1 : String, arg2 : String)  : Element
			- createAnnotationXMI(arg0 : Document, arg1 : AnnotationModel)  : Node
			- createEnumerationItemXMI(arg0 : Document, arg1 : String)  : Element
			- createEnumerationXMI(arg0 : Document, arg1 : Enumeration)  : Element
			-------------------------------------------------- 
	Class :  XMLGenerator
			--------------------------------------------------
			--------------------------------------------------
			+ XMLGenerator()
			+ generateXML(arg0 : ProjectModel, arg1 : String)  : void
			- createPackageList(arg0 : List<PackageModel>, arg1 : Document, arg2 : Element)  : void
			- createAnnotations(arg0 : Document, arg1 : AnnotationModel)  : Element
			- createInterface(arg0 : Document, arg1 : InterfaceModel)  : Element
			- createClass(arg0 : Document, arg1 : ClassModel)  : Element
			- saveDocument(arg0 : Document, arg1 : String)  : void
			- createFieldElement(arg0 : Document, arg1 : FieldModel)  : Element
			- createRelation(arg0 : Document, arg1 : RelationModel)  : Element
			- createEnumuration(arg0 : Document, arg1 : Enumeration)  : Element
			- createConstructorElement(arg0 : Document, arg1 : ConstructorModel)  : Element
			- createMethodElement(arg0 : Document, arg1 : MethodModel)  : Element
			-------------------------------------------------- 
	Class :  XMLParser
			--------------------------------------------------
			--------------------------------------------------
			+ XMLParser()
			- parsePackage(arg0 : Element)  : PackageModel
			- parseEnumeration(arg0 : Element)  : Enumeration
			- parseConstructor(arg0 : Element)  : ConstructorModel
			- parseRelation(arg0 : Element)  : RelationModel
			- parseInterface(arg0 : Element)  : InterfaceModel
			- parseClass(arg0 : Element)  : ClassModel
			+ parse(arg0 : String)  : ProjectModel
			- parseMethod(arg0 : Element)  : MethodModel
			- parseField(arg0 : Element)  : FieldModel
			- parseAnnotation(arg0 : Element)  : AnnotationModel
			-------------------------------------------------- 
	Class :  XMLNode
			--------------------------------------------------
			- node : Node
			- children : XMLNode[]<XMLNode[]>
			--------------------------------------------------
			+ XMLNode(arg0 : String)
			+ XMLNode(arg0 : Node)
			- extractChildren()  : void
			+ getIntAttribute(arg0 : String)  : int
			+ getName()  : String
			+ getValue()  : String
			+ isNamed(arg0 : String)  : boolean
			+ getNode()  : Node
			+ getAttribute(arg0 : String)  : String
			+ setNode(arg0 : Node)  : void
			+ getChild(arg0 : String)  : XMLNode
			+ getChildren()  : XMLNode[]
			-------------------------------------------------- 
	Class :  FilesUtilsTest
			--------------------------------------------------
			- filesUtils : FilesUtils
			- testFolder : File
			--------------------------------------------------
			+ FilesUtilsTest()
			~ testGetAllPackages()  : void
			~ testIsAValidClassFile()  : void
			~ testIsAValidPackage()  : void
			~ testIsAValidProject()  : void
			~ init()  : void
			-------------------------------------------------- 
	Class :  ParserTest
			--------------------------------------------------
			--------------------------------------------------
			+ ParserTest()
			+ testProjectParser()  : void
			-------------------------------------------------- 
	Class :  ClassesLoaderUtils
			--------------------------------------------------
			--------------------------------------------------
			+ ClassesLoaderUtils()
			+ forName(arg0 : String, arg1 : String)  : Class
			-------------------------------------------------- 
	Class :  FilesUtils
			--------------------------------------------------
			+ logger : Logger
			- projectValidator : Validator
			- packageValidator : Validator
			- classValidator : Validator
			--------------------------------------------------
			+ FilesUtils(arg0 : Validator<File>, arg1 : Validator<File>, arg2 : Validator<File>)
			+ FilesUtils()
			+ doesFileExist(arg0 : Object, arg1 : Object)  : boolean
			+ doesFileExist(arg0 : File, arg1 : Logger)  : boolean
			+ isAValidPackage(arg0 : File)  : boolean
			+ getAllPackages(arg0 : File, arg1 : List<File>)  : void
			+ isAValidProject(arg0 : File)  : boolean
			+ isAValidClassFile(arg0 : File)  : boolean
			-------------------------------------------------- 
	Class :  GenericTypeUtils
			--------------------------------------------------
			--------------------------------------------------
			+ GenericTypeUtils()
			+ getGenericType(arg0 : Type)  : String
			-------------------------------------------------- 
	Class :  RelationUtils
			--------------------------------------------------
			--------------------------------------------------
			+ RelationUtils()
			+ getRelations(arg0 : ProjectModel)  : List
			-------------------------------------------------- 
	Class :  StringUtils
			--------------------------------------------------
			--------------------------------------------------
			+ StringUtils()
			+ extractProjectName(arg0 : String)  : String
			+ getSimpleName(arg0 : String)  : String
			-------------------------------------------------- 
	Class :  VisibilityUtils
			--------------------------------------------------
			--------------------------------------------------
			+ VisibilityUtils()
			+ determineVisibility(arg0 : int)  : AccessModifier
			-------------------------------------------------- 
	Class :  ClassValidator
			--------------------------------------------------
			--------------------------------------------------
			+ ClassValidator()
			+ doesFileExist(arg0 : Object, arg1 : Object)  : boolean
			+ doesFileExist(arg0 : File, arg1 : Logger)  : boolean
			+ isValid(arg0 : File, arg1 : Logger)  : boolean
			+ isValid(arg0 : Object, arg1 : Object)  : boolean
			-------------------------------------------------- 
	Class :  PackageValidator
			--------------------------------------------------
			--------------------------------------------------
			+ PackageValidator()
			+ doesFileExist(arg0 : Object, arg1 : Object)  : boolean
			+ doesFileExist(arg0 : File, arg1 : Logger)  : boolean
			+ isValid(arg0 : File, arg1 : Logger)  : boolean
			+ isValid(arg0 : Object, arg1 : Object)  : boolean
			-------------------------------------------------- 
	Class :  ProjectValidator
			--------------------------------------------------
			--------------------------------------------------
			+ ProjectValidator()
			+ doesFileExist(arg0 : Object, arg1 : Object)  : boolean
			+ doesFileExist(arg0 : File, arg1 : Logger)  : boolean
			+ isValid(arg0 : File, arg1 : Logger)  : boolean
			+ isValid(arg0 : Object, arg1 : Object)  : boolean
			-------------------------------------------------- 
	Annotation AnotationTest
	 Interface : I
	 Interface : ModelInterface
			+ getXml()  : void
	 Interface : Parser
			+ Parse(arg0 : Object)  : Object
	 Interface : FileValidator
			+ doesFileExist(arg0 : Object, arg1 : Object)  : boolean
	 Interface : Validator
			+ isValid(arg0 : Object, arg1 : Object)  : boolean
	enumeration : AccessModifier

	enumeration : RelationType


jan. 22, 2024 5:41:44 P.M. org.mql.java.parsers.ParseXMLFile parseFileLogger
INFO: Package : org.mql.java.annotations
	Annotation AnotationTest

jan. 22, 2024 5:41:44 P.M. org.mql.java.parsers.ParseXMLFile parseFileLogger
INFO: Package : org.mql.java.enumerations
	enumeration : AccessModifier

	enumeration : RelationType


jan. 22, 2024 5:41:44 P.M. org.mql.java.parsers.ParseXMLFile parseFileLogger
INFO: Package : org.mql.java.models
	Class :  AnnotationModel
			--------------------------------------------------
			- name : String
			--------------------------------------------------
			+ AnnotationModel(arg0 : Class<?>)
			+ AnnotationModel()
			+ getName()  : String
			+ toString()  : String
			+ setName(arg0 : String)  : void
			-------------------------------------------------- 
	Class :  Canstant
			--------------------------------------------------
			- name : String
			--------------------------------------------------
			+ Canstant()
			# visibility(arg0 : int)  : AccessModifier
			-------------------------------------------------- 
	Class :  ClassModel
			--------------------------------------------------
			- name : String
			- filedes : List<List>
			- methods : List<List>
			- Constructors : List<List>
			- interfacesImp : List<List>
			- inheritanceChain : List<List>
			- parent : String
			- relations : List<List>
			--------------------------------------------------
			+ ClassModel(arg0 : Class<?>)
			+ ClassModel()
			+ getRelations()  : List
			+ setRelations(arg0 : List<RelationModel>)  : void
			+ getInterfacesImp()  : List
			+ getFiledes()  : List
			+ addFiled(arg0 : FieldModel)  : void
			+ setFiledes(arg0 : List<FieldModel>)  : void
			+ setMethods(arg0 : List<MethodModel>)  : void
			+ getXml()  : void
			+ getInheritanceChain()  : List
			+ setInheritanceChain(arg0 : List<String>)  : void
			+ setConstructors(arg0 : List<ConstructorModel>)  : void
			+ addInterfacesImp(arg0 : String)  : void
			+ addConstructor(arg0 : ConstructorModel)  : void
			+ setInterfacesImp(arg0 : List<String>)  : void
			+ getName()  : String
			+ toString()  : String
			- addAll(arg0 : List<RelationModel>)  : void
			+ getMethods()  : List
			+ getConstructors()  : List
			+ getParent()  : String
			+ setName(arg0 : String)  : void
			+ addMethod(arg0 : MethodModel)  : void
			+ setParent(arg0 : String)  : void
			-------------------------------------------------- 
	Class :  ConstructorModel
			--------------------------------------------------
			- name : String
			- modifier : int
			- parameterList : List<List>
			- visibility : AccessModifier
			--------------------------------------------------
			+ ConstructorModel(arg0 : Constructor<?>, arg1 : String)
			+ ConstructorModel()
			+ ConstructorModel(arg0 : Constructor<?>)
			+ getParameterList()  : List
			+ setParameteeList(arg0 : List<ParameterModel>)  : void
			+ setModifier(arg0 : int)  : void
			+ getModifier()  : int
			+ getName()  : String
			+ toString()  : String
			- addAll(arg0 : Parameter[])  : void
			+ setName(arg0 : String)  : void
			-------------------------------------------------- 
	Class :  Enumeration
			--------------------------------------------------
			- name : String
			- valuesEnum : List<List>
			--------------------------------------------------
			+ Enumeration(arg0 : Class<?>)
			+ Enumeration()
			+ getValuesEnum()  : List
			+ getName()  : String
			+ toString()  : String
			+ setName(arg0 : String)  : void
			-------------------------------------------------- 
	Class :  FieldModel
			--------------------------------------------------
			- name : String
			- niveauVisiblity : AccessModifier
			- type : String
			- isStatic : boolean
			- isFinal : boolean
			- multiplicity : Multiplicity
			- genericType : String
			--------------------------------------------------
			+ FieldModel(arg0 : Field)
			+ FieldModel()
			+ getNiveauVisiblity()  : AccessModifier
			+ isIterable()  : boolean
			+ setStatic(arg0 : boolean)  : void
			+ setFinal(arg0 : boolean)  : void
			+ isMultiple()  : boolean
			+ setType(arg0 : String)  : void
			+ getMultiplicity()  : Multiplicity
			+ setMultiplicity(arg0 : Multiplicity)  : void
			+ setNiveauVisiblity(arg0 : AccessModifier)  : void
			+ setGenericType(arg0 : String)  : void
			+ setIterable(arg0 : boolean)  : void
			+ getName()  : String
			+ toString()  : String
			+ isFinal()  : boolean
			+ isStatic()  : boolean
			+ setName(arg0 : String)  : void
			- getGenericType()  : String
			+ getType()  : String
			-------------------------------------------------- 
	Class :  InterfaceModel
			--------------------------------------------------
			- interfaceName : String
			- fields : List<List>
			- methods : List<List>
			- relations : List<List>
			--------------------------------------------------
			+ InterfaceModel(arg0 : Class<?>)
			+ InterfaceModel()
			+ getInterfaceName()  : String
			+ getRelations()  : List
			+ setRelations(arg0 : List<RelationModel>)  : void
			+ setMethods(arg0 : List<MethodModel>)  : void
			+ setInterfaceName(arg0 : String)  : void
			+ toString()  : String
			+ getFields()  : List
			+ getMethods()  : List
			+ addMethod(arg0 : MethodModel)  : void
			+ setFields(arg0 : List<FieldModel>)  : void
			-------------------------------------------------- 
	Class :  MethodModel
			--------------------------------------------------
			+ name : String
			- parameters : List<List>
			- modifier : int
			- visibility : AccessModifier
			- isStatic : boolean
			- isFinal : boolean
			- typeReturn : String
			--------------------------------------------------
			+ MethodModel()
			+ MethodModel(arg0 : Method)
			+ getTypeReturn()  : String
			+ getVisibility()  : AccessModifier
			+ setStatic(arg0 : boolean)  : void
			+ setFinal(arg0 : boolean)  : void
			+ setVisibility(arg0 : AccessModifier)  : void
			+ setModifier(arg0 : int)  : void
			+ getModifier()  : int
			+ setTypeReturn(arg0 : String)  : void
			+ getName()  : String
			+ toString()  : String
			+ isFinal()  : boolean
			- addAll(arg0 : Parameter[])  : void
			+ isStatic()  : boolean
			+ setName(arg0 : String)  : void
			+ getParameters()  : List
			+ setParameters(arg0 : List<ParameterModel>)  : void
			-------------------------------------------------- 
	Class :  ModelEntity
			--------------------------------------------------
			- name : String
			- properties : List<List>
			- parent : String
			--------------------------------------------------
			+ ModelEntity(arg0 : String)
			+ addProperties(arg0 : PropertyModel)  : void
			+ getName()  : String
			+ toString()  : String
			+ getParent()  : String
			+ getProperties()  : List
			+ setProperties(arg0 : List<PropertyModel>)  : void
			+ setName(arg0 : String)  : void
			+ setParent(arg0 : String)  : void
			-------------------------------------------------- 
	Class :  Multiplicity
			--------------------------------------------------
			- lowerBound : String
			- upperBound : String
			--------------------------------------------------
			+ Multiplicity()
			+ Multiplicity(arg0 : String, arg1 : String)
			+ isMultiple()  : boolean
			+ setLowerBound(arg0 : String)  : void
			+ getLowerBound()  : String
			+ setUpperBound(arg0 : String)  : void
			+ getUpperBound()  : String
			- isValidBound(arg0 : String)  : boolean
			- isNumericMultiple(arg0 : String)  : boolean
			+ toString()  : String
			-------------------------------------------------- 
	Class :  PackageModel
			--------------------------------------------------
			- name : String
			+ packages : List<List>
			+ classes : List<List>
			- interfaces : List<List>
			- enumerations : List<List>
			- annotations : List<List>
			+ relations : List<List>
			--------------------------------------------------
			+ PackageModel(arg0 : String)
			+ PackageModel()
			+ getRelations()  : List
			+ setRelations(arg0 : List<RelationModel>)  : void
			+ getEnumerations()  : List
			+ setClasses(arg0 : List<ClassModel>)  : void
			+ setAnnotations(arg0 : List<AnnotationModel>)  : void
			+ setEnumerations(arg0 : List<Enumeration>)  : void
			+ addRelation(arg0 : RelationModel)  : void
			+ showRelarion()  : void
			+ setInterfaces(arg0 : List<InterfaceModel>)  : void
			+ setPackages(arg0 : List<PackageModel>)  : void
			+ getName()  : String
			+ toString()  : String
			+ getInterfaces()  : List
			+ getClasses()  : List
			+ getAnnotations()  : List
			+ getPackages()  : List
			+ setName(arg0 : String)  : void
			-------------------------------------------------- 
	Class :  ParameterModel
			--------------------------------------------------
			- name : String
			- type : String
			--------------------------------------------------
			+ ParameterModel()
			+ ParameterModel(arg0 : String)
			+ ParameterModel(arg0 : Parameter)
			+ setType(arg0 : String)  : void
			+ getName()  : String
			+ toString()  : String
			+ setName(arg0 : String)  : void
			+ getType()  : String
			-------------------------------------------------- 
	Class :  ProjectModel
			--------------------------------------------------
			- name : String
			+ packagesList : List<List>
			- relationsList : List<List>
			- path : String
			- projectModel : ProjectModel
			--------------------------------------------------
			+ ProjectModel()
			+ ProjectModel(arg0 : List<PackageModel>, arg1 : List<RelationModel>, arg2 : String, arg3 : String)
			+ setPackagesList(arg0 : List<PackageModel>)  : void
			+ getRelations()  : List
			+ setProjectModel(arg0 : ProjectModel)  : void
			+ setRelations(arg0 : List<RelationModel>)  : void
			+ getProjectModel()  : ProjectModel
			+ getPackagesList()  : List
			+ setPath(arg0 : String)  : void
			+ getName()  : String
			+ toString()  : String
			+ setName(arg0 : String)  : void
			+ getPath()  : String
			-------------------------------------------------- 
	Class :  PropertyModel
			--------------------------------------------------
			- name : String
			- niveauVisiblity : AccessModifier
			- type : String
			- isStatic : boolean
			- isFinal : boolean
			--------------------------------------------------
			+ PropertyModel(arg0 : String)
			+ getNiveauVisiblity()  : AccessModifier
			+ setStatic(arg0 : boolean)  : void
			+ setFinal(arg0 : boolean)  : void
			+ setType(arg0 : String)  : void
			+ setNiveauVisiblity(arg0 : AccessModifier)  : void
			+ getName()  : String
			+ toString()  : String
			+ isFinal()  : boolean
			+ isStatic()  : boolean
			+ setName(arg0 : String)  : void
			+ getType()  : String
			-------------------------------------------------- 
	Class :  RelationModel
			--------------------------------------------------
			- sourceModel : Class
			- targetModel : Class
			- relationType : RelationType
			--------------------------------------------------
			+ RelationModel(arg0 : Class<?>, arg1 : Class<?>, arg2 : RelationType)
			+ RelationModel()
			+ getTargetModel()  : Class
			+ getRelationType()  : RelationType
			+ getSourceModel()  : Class
			+ setTargetModel(arg0 : Class<?>)  : void
			+ setSourceModel(arg0 : Class<?>)  : void
			+ setRelationType(arg0 : RelationType)  : void
			+ toString()  : String
			-------------------------------------------------- 
	 Interface : I
	 Interface : ModelInterface
			+ getXml()  : void

jan. 22, 2024 5:41:44 P.M. org.mql.java.parsers.ParseXMLFile parseFileLogger
INFO: Package : org.mql.java.parsers
	Class :  ParseProjectTest
			--------------------------------------------------
			--------------------------------------------------
			+ ParseProjectTest()
			~ parseLogger()  : void
			~ parseConsole()  : void
			+ main(arg0 : String[])  : void
			+ parse(arg0 : List<PackageModel>)  : void
			- parse(arg0 : List<PackageModel>, arg1 : Logger)  : void
			-------------------------------------------------- 
	Class :  ParseXMLFile
			--------------------------------------------------
			--------------------------------------------------
			+ ParseXMLFile()
			+ main(arg0 : String[])  : void
			-------------------------------------------------- 
	Class :  TestXMIGenerator
			--------------------------------------------------
			--------------------------------------------------
			+ TestXMIGenerator()
			+ main(arg0 : String[])  : void
			-------------------------------------------------- 
	Class :  TestXMLGenerator
			--------------------------------------------------
			--------------------------------------------------
			+ TestXMLGenerator()
			+ main(arg0 : String[])  : void
			-------------------------------------------------- 
	Class :  AnnotationParser
			--------------------------------------------------
			- name : String
			+ annotation : AnnotationModel
			--------------------------------------------------
			+ AnnotationParser(arg0 : Class<?>)
			+ AnnotationParser(arg0 : String, arg1 : String)
			+ setAnnotation(arg0 : AnnotationModel)  : void
			+ toString()  : String
			+ getAnnotation()  : AnnotationModel
			-------------------------------------------------- 
	Class :  ClassParser
			--------------------------------------------------
			- classModel : ClassModel
			- className : String
			--------------------------------------------------
			+ ClassParser(arg0 : Class<?>)
			+ setClassModel(arg0 : ClassModel)  : void
			+ setClassName(arg0 : String)  : void
			+ getClassModel()  : ClassModel
			+ toString()  : String
			+ getClassName()  : String
			-------------------------------------------------- 
	Class :  EnumerationParser
			--------------------------------------------------
			- name : String
			+ enumeration : Enumeration
			--------------------------------------------------
			+ EnumerationParser(arg0 : String, arg1 : String)
			+ EnumerationParser(arg0 : Class<?>)
			+ setEnumeration(arg0 : Enumeration)  : void
			+ getName()  : String
			+ toString()  : String
			+ setName(arg0 : String)  : void
			+ getEnumeration()  : Enumeration
			-------------------------------------------------- 
	Class :  InterfaceParser
			--------------------------------------------------
			- interfaceModel : InterfaceModel
			--------------------------------------------------
			+ InterfaceParser(arg0 : Class<?>)
			+ InterfaceParser(arg0 : String, arg1 : String)
			+ getInterfaceModel()  : InterfaceModel
			+ getName()  : String
			+ toString()  : String
			+ getFields()  : List
			+ getMethods()  : List
			-------------------------------------------------- 
	Class :  PackageParser
			--------------------------------------------------
			- packageName : String
			- packages : List<List>
			- classes : List<List>
			- interfaces : List<List>
			- enumerations : List<List>
			- annotations : List<List>
			- packageModel : PackageModel
			- relations : List<List>
			- relationlistsProject : List<List>
			- path : String
			--------------------------------------------------
			+ PackageParser(arg0 : String, arg1 : String)
			+ getPackageModel()  : PackageModel
			+ getRelations()  : List
			+ setPackageModel(arg0 : PackageModel)  : void
			+ getPackageName()  : String
			+ parse()  : void
			- getAll()  : void
			-------------------------------------------------- 
	Class :  ProjectParser
			--------------------------------------------------
			- projectPath : String
			- project : ProjectModel
			- name : String
			~ list : List<List>
			--------------------------------------------------
			+ ProjectParser(arg0 : String)
			- getNameProject(arg0 : String)  : String
			+ getProjectPath()  : String
			+ getProject()  : ProjectModel
			+ parse()  : void
			-------------------------------------------------- 
	Class :  RelationParser
			--------------------------------------------------
			- c : Class
			- relations : List<List>
			--------------------------------------------------
			+ RelationParser(arg0 : Class<?>)
			+ getRelations()  : List
			- determineFieldRelationType(arg0 : Field)  : RelationType
			- analyseClass(arg0 : Class<?>)  : List
			+ toString()  : String
			-------------------------------------------------- 
	Class :  XMIGenerator
			--------------------------------------------------
			--------------------------------------------------
			+ XMIGenerator()
			- saveDocument(arg0 : Document, arg1 : String)  : void
			- createConstructorOperationXMI(arg0 : Document, arg1 : ConstructorModel)  : Element
			+ generateXMI(arg0 : ProjectModel, arg1 : String)  : void
			- createPackageXMI(arg0 : List<PackageModel>, arg1 : Document, arg2 : Element)  : void
			- createInterfaceXMI(arg0 : Document, arg1 : InterfaceModel)  : Element
			- createXmiRelation(arg0 : Document, arg1 : RelationModel)  : Element
			- createAttributeXMI(arg0 : Document, arg1 : FieldModel)  : Element
			- createOperationXMI(arg0 : Document, arg1 : MethodModel)  : Element
			- createClassXMI(arg0 : Document, arg1 : ClassModel)  : Element
			- createParameterXMI(arg0 : Document, arg1 : String, arg2 : String)  : Element
			- createAnnotationXMI(arg0 : Document, arg1 : AnnotationModel)  : Node
			- createEnumerationItemXMI(arg0 : Document, arg1 : String)  : Element
			- createEnumerationXMI(arg0 : Document, arg1 : Enumeration)  : Element
			-------------------------------------------------- 
	Class :  XMLGenerator
			--------------------------------------------------
			--------------------------------------------------
			+ XMLGenerator()
			+ generateXML(arg0 : ProjectModel, arg1 : String)  : void
			- createPackageList(arg0 : List<PackageModel>, arg1 : Document, arg2 : Element)  : void
			- createAnnotations(arg0 : Document, arg1 : AnnotationModel)  : Element
			- createInterface(arg0 : Document, arg1 : InterfaceModel)  : Element
			- createClass(arg0 : Document, arg1 : ClassModel)  : Element
			- saveDocument(arg0 : Document, arg1 : String)  : void
			- createFieldElement(arg0 : Document, arg1 : FieldModel)  : Element
			- createRelation(arg0 : Document, arg1 : RelationModel)  : Element
			- createEnumuration(arg0 : Document, arg1 : Enumeration)  : Element
			- createConstructorElement(arg0 : Document, arg1 : ConstructorModel)  : Element
			- createMethodElement(arg0 : Document, arg1 : MethodModel)  : Element
			-------------------------------------------------- 
	Class :  XMLParser
			--------------------------------------------------
			--------------------------------------------------
			+ XMLParser()
			- parsePackage(arg0 : Element)  : PackageModel
			- parseEnumeration(arg0 : Element)  : Enumeration
			- parseConstructor(arg0 : Element)  : ConstructorModel
			- parseRelation(arg0 : Element)  : RelationModel
			- parseInterface(arg0 : Element)  : InterfaceModel
			- parseClass(arg0 : Element)  : ClassModel
			+ parse(arg0 : String)  : ProjectModel
			- parseMethod(arg0 : Element)  : MethodModel
			- parseField(arg0 : Element)  : FieldModel
			- parseAnnotation(arg0 : Element)  : AnnotationModel
			-------------------------------------------------- 
	Class :  XMLNode
			--------------------------------------------------
			- node : Node
			- children : XMLNode[]<XMLNode[]>
			--------------------------------------------------
			+ XMLNode(arg0 : String)
			+ XMLNode(arg0 : Node)
			- extractChildren()  : void
			+ getIntAttribute(arg0 : String)  : int
			+ getName()  : String
			+ getValue()  : String
			+ isNamed(arg0 : String)  : boolean
			+ getNode()  : Node
			+ getAttribute(arg0 : String)  : String
			+ setNode(arg0 : Node)  : void
			+ getChild(arg0 : String)  : XMLNode
			+ getChildren()  : XMLNode[]
			-------------------------------------------------- 
	 Interface : Parser
			+ Parse(arg0 : Object)  : Object

jan. 22, 2024 5:41:44 P.M. org.mql.java.parsers.ParseXMLFile parseFileLogger
INFO: Package : org.mql.java.parsers.parserImp
	Class :  AnnotationParser
			--------------------------------------------------
			- name : String
			+ annotation : AnnotationModel
			--------------------------------------------------
			+ AnnotationParser(arg0 : Class<?>)
			+ AnnotationParser(arg0 : String, arg1 : String)
			+ setAnnotation(arg0 : AnnotationModel)  : void
			+ toString()  : String
			+ getAnnotation()  : AnnotationModel
			-------------------------------------------------- 
	Class :  ClassParser
			--------------------------------------------------
			- classModel : ClassModel
			- className : String
			--------------------------------------------------
			+ ClassParser(arg0 : Class<?>)
			+ setClassModel(arg0 : ClassModel)  : void
			+ setClassName(arg0 : String)  : void
			+ getClassModel()  : ClassModel
			+ toString()  : String
			+ getClassName()  : String
			-------------------------------------------------- 
	Class :  EnumerationParser
			--------------------------------------------------
			- name : String
			+ enumeration : Enumeration
			--------------------------------------------------
			+ EnumerationParser(arg0 : String, arg1 : String)
			+ EnumerationParser(arg0 : Class<?>)
			+ setEnumeration(arg0 : Enumeration)  : void
			+ getName()  : String
			+ toString()  : String
			+ setName(arg0 : String)  : void
			+ getEnumeration()  : Enumeration
			-------------------------------------------------- 
	Class :  InterfaceParser
			--------------------------------------------------
			- interfaceModel : InterfaceModel
			--------------------------------------------------
			+ InterfaceParser(arg0 : Class<?>)
			+ InterfaceParser(arg0 : String, arg1 : String)
			+ getInterfaceModel()  : InterfaceModel
			+ getName()  : String
			+ toString()  : String
			+ getFields()  : List
			+ getMethods()  : List
			-------------------------------------------------- 
	Class :  PackageParser
			--------------------------------------------------
			- packageName : String
			- packages : List<List>
			- classes : List<List>
			- interfaces : List<List>
			- enumerations : List<List>
			- annotations : List<List>
			- packageModel : PackageModel
			- relations : List<List>
			- relationlistsProject : List<List>
			- path : String
			--------------------------------------------------
			+ PackageParser(arg0 : String, arg1 : String)
			+ getPackageModel()  : PackageModel
			+ getRelations()  : List
			+ setPackageModel(arg0 : PackageModel)  : void
			+ getPackageName()  : String
			+ parse()  : void
			- getAll()  : void
			-------------------------------------------------- 
	Class :  ProjectParser
			--------------------------------------------------
			- projectPath : String
			- project : ProjectModel
			- name : String
			~ list : List<List>
			--------------------------------------------------
			+ ProjectParser(arg0 : String)
			- getNameProject(arg0 : String)  : String
			+ getProjectPath()  : String
			+ getProject()  : ProjectModel
			+ parse()  : void
			-------------------------------------------------- 
	Class :  RelationParser
			--------------------------------------------------
			- c : Class
			- relations : List<List>
			--------------------------------------------------
			+ RelationParser(arg0 : Class<?>)
			+ getRelations()  : List
			- determineFieldRelationType(arg0 : Field)  : RelationType
			- analyseClass(arg0 : Class<?>)  : List
			+ toString()  : String
			-------------------------------------------------- 
	Class :  XMIGenerator
			--------------------------------------------------
			--------------------------------------------------
			+ XMIGenerator()
			- saveDocument(arg0 : Document, arg1 : String)  : void
			- createConstructorOperationXMI(arg0 : Document, arg1 : ConstructorModel)  : Element
			+ generateXMI(arg0 : ProjectModel, arg1 : String)  : void
			- createPackageXMI(arg0 : List<PackageModel>, arg1 : Document, arg2 : Element)  : void
			- createInterfaceXMI(arg0 : Document, arg1 : InterfaceModel)  : Element
			- createXmiRelation(arg0 : Document, arg1 : RelationModel)  : Element
			- createAttributeXMI(arg0 : Document, arg1 : FieldModel)  : Element
			- createOperationXMI(arg0 : Document, arg1 : MethodModel)  : Element
			- createClassXMI(arg0 : Document, arg1 : ClassModel)  : Element
			- createParameterXMI(arg0 : Document, arg1 : String, arg2 : String)  : Element
			- createAnnotationXMI(arg0 : Document, arg1 : AnnotationModel)  : Node
			- createEnumerationItemXMI(arg0 : Document, arg1 : String)  : Element
			- createEnumerationXMI(arg0 : Document, arg1 : Enumeration)  : Element
			-------------------------------------------------- 
	Class :  XMLGenerator
			--------------------------------------------------
			--------------------------------------------------
			+ XMLGenerator()
			+ generateXML(arg0 : ProjectModel, arg1 : String)  : void
			- createPackageList(arg0 : List<PackageModel>, arg1 : Document, arg2 : Element)  : void
			- createAnnotations(arg0 : Document, arg1 : AnnotationModel)  : Element
			- createInterface(arg0 : Document, arg1 : InterfaceModel)  : Element
			- createClass(arg0 : Document, arg1 : ClassModel)  : Element
			- saveDocument(arg0 : Document, arg1 : String)  : void
			- createFieldElement(arg0 : Document, arg1 : FieldModel)  : Element
			- createRelation(arg0 : Document, arg1 : RelationModel)  : Element
			- createEnumuration(arg0 : Document, arg1 : Enumeration)  : Element
			- createConstructorElement(arg0 : Document, arg1 : ConstructorModel)  : Element
			- createMethodElement(arg0 : Document, arg1 : MethodModel)  : Element
			-------------------------------------------------- 
	Class :  XMLParser
			--------------------------------------------------
			--------------------------------------------------
			+ XMLParser()
			- parsePackage(arg0 : Element)  : PackageModel
			- parseEnumeration(arg0 : Element)  : Enumeration
			- parseConstructor(arg0 : Element)  : ConstructorModel
			- parseRelation(arg0 : Element)  : RelationModel
			- parseInterface(arg0 : Element)  : InterfaceModel
			- parseClass(arg0 : Element)  : ClassModel
			+ parse(arg0 : String)  : ProjectModel
			- parseMethod(arg0 : Element)  : MethodModel
			- parseField(arg0 : Element)  : FieldModel
			- parseAnnotation(arg0 : Element)  : AnnotationModel
			-------------------------------------------------- 

jan. 22, 2024 5:41:44 P.M. org.mql.java.parsers.ParseXMLFile parseFileLogger
INFO: Package : org.mql.java.parsers.xml
	Class :  XMLNode
			--------------------------------------------------
			- node : Node
			- children : XMLNode[]<XMLNode[]>
			--------------------------------------------------
			+ XMLNode(arg0 : String)
			+ XMLNode(arg0 : Node)
			- extractChildren()  : void
			+ getIntAttribute(arg0 : String)  : int
			+ getName()  : String
			+ getValue()  : String
			+ isNamed(arg0 : String)  : boolean
			+ getNode()  : Node
			+ getAttribute(arg0 : String)  : String
			+ setNode(arg0 : Node)  : void
			+ getChild(arg0 : String)  : XMLNode
			+ getChildren()  : XMLNode[]
			-------------------------------------------------- 

jan. 22, 2024 5:41:44 P.M. org.mql.java.parsers.ParseXMLFile parseFileLogger
INFO: Package : org.mql.java.tests
	Class :  FilesUtilsTest
			--------------------------------------------------
			- filesUtils : FilesUtils
			- testFolder : File
			--------------------------------------------------
			+ FilesUtilsTest()
			~ testGetAllPackages()  : void
			~ testIsAValidClassFile()  : void
			~ testIsAValidPackage()  : void
			~ testIsAValidProject()  : void
			~ init()  : void
			-------------------------------------------------- 
	Class :  ParserTest
			--------------------------------------------------
			--------------------------------------------------
			+ ParserTest()
			+ testProjectParser()  : void
			-------------------------------------------------- 

jan. 22, 2024 5:41:44 P.M. org.mql.java.parsers.ParseXMLFile parseFileLogger
INFO: Package : org.mql.java.ui

jan. 22, 2024 5:41:44 P.M. org.mql.java.parsers.ParseXMLFile parseFileLogger
INFO: Package : org.mql.java.utils
	Class :  ClassesLoaderUtils
			--------------------------------------------------
			--------------------------------------------------
			+ ClassesLoaderUtils()
			+ forName(arg0 : String, arg1 : String)  : Class
			-------------------------------------------------- 
	Class :  FilesUtils
			--------------------------------------------------
			+ logger : Logger
			- projectValidator : Validator
			- packageValidator : Validator
			- classValidator : Validator
			--------------------------------------------------
			+ FilesUtils(arg0 : Validator<File>, arg1 : Validator<File>, arg2 : Validator<File>)
			+ FilesUtils()
			+ doesFileExist(arg0 : Object, arg1 : Object)  : boolean
			+ doesFileExist(arg0 : File, arg1 : Logger)  : boolean
			+ isAValidPackage(arg0 : File)  : boolean
			+ getAllPackages(arg0 : File, arg1 : List<File>)  : void
			+ isAValidProject(arg0 : File)  : boolean
			+ isAValidClassFile(arg0 : File)  : boolean
			-------------------------------------------------- 
	Class :  GenericTypeUtils
			--------------------------------------------------
			--------------------------------------------------
			+ GenericTypeUtils()
			+ getGenericType(arg0 : Type)  : String
			-------------------------------------------------- 
	Class :  RelationUtils
			--------------------------------------------------
			--------------------------------------------------
			+ RelationUtils()
			+ getRelations(arg0 : ProjectModel)  : List
			-------------------------------------------------- 
	Class :  StringUtils
			--------------------------------------------------
			--------------------------------------------------
			+ StringUtils()
			+ extractProjectName(arg0 : String)  : String
			+ getSimpleName(arg0 : String)  : String
			-------------------------------------------------- 
	Class :  VisibilityUtils
			--------------------------------------------------
			--------------------------------------------------
			+ VisibilityUtils()
			+ determineVisibility(arg0 : int)  : AccessModifier
			-------------------------------------------------- 
	Class :  ClassValidator
			--------------------------------------------------
			--------------------------------------------------
			+ ClassValidator()
			+ doesFileExist(arg0 : Object, arg1 : Object)  : boolean
			+ doesFileExist(arg0 : File, arg1 : Logger)  : boolean
			+ isValid(arg0 : File, arg1 : Logger)  : boolean
			+ isValid(arg0 : Object, arg1 : Object)  : boolean
			-------------------------------------------------- 
	Class :  PackageValidator
			--------------------------------------------------
			--------------------------------------------------
			+ PackageValidator()
			+ doesFileExist(arg0 : Object, arg1 : Object)  : boolean
			+ doesFileExist(arg0 : File, arg1 : Logger)  : boolean
			+ isValid(arg0 : File, arg1 : Logger)  : boolean
			+ isValid(arg0 : Object, arg1 : Object)  : boolean
			-------------------------------------------------- 
	Class :  ProjectValidator
			--------------------------------------------------
			--------------------------------------------------
			+ ProjectValidator()
			+ doesFileExist(arg0 : Object, arg1 : Object)  : boolean
			+ doesFileExist(arg0 : File, arg1 : Logger)  : boolean
			+ isValid(arg0 : File, arg1 : Logger)  : boolean
			+ isValid(arg0 : Object, arg1 : Object)  : boolean
			-------------------------------------------------- 
	 Interface : FileValidator
			+ doesFileExist(arg0 : Object, arg1 : Object)  : boolean
	 Interface : Validator
			+ isValid(arg0 : Object, arg1 : Object)  : boolean

jan. 22, 2024 5:41:44 P.M. org.mql.java.parsers.ParseXMLFile parseFileLogger
INFO: Package : org.mql.java.utils.validator
	Class :  ClassValidator
			--------------------------------------------------
			--------------------------------------------------
			+ ClassValidator()
			+ doesFileExist(arg0 : Object, arg1 : Object)  : boolean
			+ doesFileExist(arg0 : File, arg1 : Logger)  : boolean
			+ isValid(arg0 : File, arg1 : Logger)  : boolean
			+ isValid(arg0 : Object, arg1 : Object)  : boolean
			-------------------------------------------------- 
	Class :  PackageValidator
			--------------------------------------------------
			--------------------------------------------------
			+ PackageValidator()
			+ doesFileExist(arg0 : Object, arg1 : Object)  : boolean
			+ doesFileExist(arg0 : File, arg1 : Logger)  : boolean
			+ isValid(arg0 : File, arg1 : Logger)  : boolean
			+ isValid(arg0 : Object, arg1 : Object)  : boolean
			-------------------------------------------------- 
	Class :  ProjectValidator
			--------------------------------------------------
			--------------------------------------------------
			+ ProjectValidator()
			+ doesFileExist(arg0 : Object, arg1 : Object)  : boolean
			+ doesFileExist(arg0 : File, arg1 : Logger)  : boolean
			+ isValid(arg0 : File, arg1 : Logger)  : boolean
			+ isValid(arg0 : Object, arg1 : Object)  : boolean
			-------------------------------------------------- 
	 Interface : FileValidator
			+ doesFileExist(arg0 : Object, arg1 : Object)  : boolean
	 Interface : Validator
			+ isValid(arg0 : Object, arg1 : Object)  : boolean

jan. 22, 2024 5:41:44 P.M. org.mql.java.parsers.ParseXMLFile parseFileLogger
INFO: Package : org.mql.java.utils.validator.validatorImp
	Class :  ClassValidator
			--------------------------------------------------
			--------------------------------------------------
			+ ClassValidator()
			+ doesFileExist(arg0 : Object, arg1 : Object)  : boolean
			+ doesFileExist(arg0 : File, arg1 : Logger)  : boolean
			+ isValid(arg0 : File, arg1 : Logger)  : boolean
			+ isValid(arg0 : Object, arg1 : Object)  : boolean
			-------------------------------------------------- 
	Class :  PackageValidator
			--------------------------------------------------
			--------------------------------------------------
			+ PackageValidator()
			+ doesFileExist(arg0 : Object, arg1 : Object)  : boolean
			+ doesFileExist(arg0 : File, arg1 : Logger)  : boolean
			+ isValid(arg0 : File, arg1 : Logger)  : boolean
			+ isValid(arg0 : Object, arg1 : Object)  : boolean
			-------------------------------------------------- 
	Class :  ProjectValidator
			--------------------------------------------------
			--------------------------------------------------
			+ ProjectValidator()
			+ doesFileExist(arg0 : Object, arg1 : Object)  : boolean
			+ doesFileExist(arg0 : File, arg1 : Logger)  : boolean
			+ isValid(arg0 : File, arg1 : Logger)  : boolean
			+ isValid(arg0 : Object, arg1 : Object)  : boolean
			-------------------------------------------------- 

jan. 22, 2024 5:41:44 P.M. org.mql.java.parsers.ParseXMLFile parseFileLogger
INFO: Package : org.mql.java.xml

